-- Interfaces definition data file
-- Generated automatically. DO NOT EDIT

INTERFACES, METHODS, ENUMS, Type = ...

--  ICOM.h
INTERFACES[5] = "RPC::IIteratorType<string, RPC::ID_STRINGITERATOR>"
METHODS[5] = {
    [3] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.STRING } } }, 
    [4] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.STRING } } }, 
    [5] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [7] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Current", retvals = {  { type = Type.STRING } } } 
}

INTERFACES[6] = "RPC::IIteratorType<uint32_t, RPC::ID_VALUEITERATOR>"
METHODS[6] = {
    [3] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.UINT32 } } }, 
    [4] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.UINT32 } } }, 
    [5] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [7] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Current", retvals = {  { type = Type.UINT32 } } } 
}

INTERFACES[1] = "RPC::IRemoteConnection"
METHODS[1] = {
    [3] = { name = "Id", retvals = {  { type = Type.UINT32 } } }, 
    [4] = { name = "RemoteId", retvals = {  { type = Type.UINT32 } } }, 
    [5] = { name = "Acquire", retvals = {  { type = Type.OBJECT, interface_param = 3 } }, params = {  { name = "waitTime", type = Type.UINT32 },  { name = "className", type = Type.STRING },  { name = "interfaceId", type = Type.INTERFACE },  { name = "version", type = Type.UINT32 } } }, 
    [6] = { name = "Terminate" }, 
    [7] = { name = "Launch", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "PostMortem" } 
}

INTERFACES[2] = "RPC::IRemoteConnection::INotification"
METHODS[2] = {
    [3] = { name = "Activated", params = {  { name = "connection", type = Type.OBJECT, class = "RPC::IRemoteConnection" } } }, 
    [4] = { name = "Deactivated", params = {  { name = "connection", type = Type.OBJECT, class = "RPC::IRemoteConnection" } } } 
}

--  ITrace.h
INTERFACES[3] = "Trace::ITraceIterator"
METHODS[3] = {
    [3] = { name = "Reset" }, 
    [4] = { name = "Info", retvals = {  { type = Type.BOOL },  { name = "enabled", type = Type.BOOL },  { name = "module", type = Type.STRING },  { name = "category", type = Type.STRING } } } 
}

INTERFACES[4] = "Trace::ITraceController"
METHODS[4] = {
    [3] = { name = "Enable", params = {  { name = "enabled", type = Type.BOOL },  { name = "module", type = Type.STRING },  { name = "category", type = Type.STRING } } } 
}

--  IPlugin.h
INTERFACES[33] = "PluginHost::IPlugin"
METHODS[33] = {
    [3] = { name = "Initialize", retvals = {  { type = Type.STRING } }, params = {  { name = "shell", type = Type.OBJECT, class = "PluginHost::IShell" } } }, 
    [4] = { name = "Deinitialize", params = {  { name = "shell", type = Type.OBJECT, class = "PluginHost::IShell" } } }, 
    [5] = { name = "Information", retvals = {  { type = Type.STRING } } } 
}

INTERFACES[34] = "PluginHost::IPlugin::INotification"
METHODS[34] = {
    [3] = { name = "Activated", params = {  { name = "callsign", type = Type.STRING },  { name = "plugin", type = Type.OBJECT, class = "PluginHost::IShell" } } }, 
    [4] = { name = "Deactivated", params = {  { name = "callsign", type = Type.STRING },  { name = "plugin", type = Type.OBJECT, class = "PluginHost::IShell" } } }, 
    [5] = { name = "Unavailable", params = {  { name = "callsign", type = Type.STRING },  { name = "plugin", type = Type.OBJECT, class = "PluginHost::IShell" } } } 
}

INTERFACES[43] = "PluginHost::IPlugin::ILifeTime"
METHODS[43] = {
    [3] = { name = "Initialize", params = {  { name = "callsign", type = Type.STRING },  { name = "plugin", type = Type.OBJECT, class = "PluginHost::IShell" } } }, 
    [4] = { name = "Deinitialized", params = {  { name = "callsign", type = Type.STRING },  { name = "plugin", type = Type.OBJECT, class = "PluginHost::IShell" } } } 
}

INTERFACES[42] = "PluginHost::IAuthenticate"
METHODS[42] = {
    [3] = { name = "CreateToken", retvals = {  { type = Type.HRESULT },  { name = "token", type = Type.STRING } }, params = {  { name = "buffer", type = Type.BUFFER16, length_param = "length" } } }, 
    [4] = { name = "Officer", retvals = {  { type = Type.OBJECT, class = "PluginHost::ISecurity" } }, params = {  { name = "token", type = Type.STRING } } } 
}

--  IShell.h
INTERFACES[48] = "PluginHost::IShell"
METHODS[48] = {
    [3] = { name = "EnableWebServer", params = {  { name = "URLPath", type = Type.STRING },  { name = "fileSystemPath", type = Type.STRING } } }, 
    [4] = { name = "DisableWebServer" }, 
    [5] = { name = "Version", retvals = {  { type = Type.STRING } } }, 
    [6] = { name = "Major", retvals = {  { type = Type.UINT8 } } }, 
    [7] = { name = "Minor", retvals = {  { type = Type.UINT8 } } }, 
    [8] = { name = "Patch", retvals = {  { type = Type.UINT8 } } }, 
    [9] = { name = "Model", retvals = {  { type = Type.STRING } } }, 
    [10] = { name = "Background", retvals = {  { type = Type.BOOL } } }, 
    [11] = { name = "Accessor", retvals = {  { type = Type.STRING } } }, 
    [12] = { name = "WebPrefix", retvals = {  { type = Type.STRING } } }, 
    [13] = { name = "Locator", retvals = {  { type = Type.STRING } } }, 
    [14] = { name = "ClassName", retvals = {  { type = Type.STRING } } }, 
    [15] = { name = "Versions", retvals = {  { type = Type.STRING } } }, 
    [16] = { name = "Callsign", retvals = {  { type = Type.STRING } } }, 
    [17] = { name = "PersistentPath", retvals = {  { type = Type.STRING } } }, 
    [18] = { name = "VolatilePath", retvals = {  { type = Type.STRING } } }, 
    [19] = { name = "DataPath", retvals = {  { type = Type.STRING } } }, 
    [20] = { name = "ProxyStubPath", retvals = {  { type = Type.STRING } } }, 
    [21] = { name = "SystemPath", retvals = {  { type = Type.STRING } } }, 
    [22] = { name = "PluginPath", retvals = {  { type = Type.STRING } } }, 
    [23] = { name = "SystemRootPath", retvals = {  { type = Type.STRING } } }, 
    [24] = { name = "SystemRootPath", retvals = {  { type = Type.HRESULT } }, params = {  { name = "systemRootPath", type = Type.STRING } } }, 
    [25] = { name = "Startup", retvals = {  { type = Type.ENUMU8, enum = "PluginHost::IShell::startup" } } }, 
    [26] = { name = "Startup", retvals = {  { type = Type.HRESULT } }, params = {  { name = "value", type = Type.ENUMU8, enum = "PluginHost::IShell::startup" } } }, 
    [27] = { name = "Substitute", retvals = {  { type = Type.STRING } }, params = {  { name = "input", type = Type.STRING } } }, 
    [28] = { name = "Resumed", retvals = {  { type = Type.BOOL } } }, 
    [29] = { name = "Resumed", retvals = {  { type = Type.HRESULT } }, params = {  { name = "value", type = Type.BOOL } } }, 
    [30] = { name = "HashKey", retvals = {  { type = Type.STRING } } }, 
    [31] = { name = "ConfigLine", retvals = {  { type = Type.STRING } } }, 
    [32] = { name = "ConfigLine", retvals = {  { type = Type.HRESULT } }, params = {  { name = "config", type = Type.STRING } } }, 
    [33] = { name = "IsSupported", retvals = {  { type = Type.BOOL } }, params = {  { name = "version", type = Type.UINT8 } } }, 
    [34] = { name = "SubSystems", retvals = {  { type = Type.OBJECT, class = "PluginHost::ISubSystem" } } }, 
    [35] = { name = "Notify", params = {  { name = "message", type = Type.STRING } } }, 
    [36] = { name = "Register", params = {  { name = "sink", type = Type.OBJECT, class = "PluginHost::IPlugin::INotification" } } }, 
    [37] = { name = "Unregister", params = {  { name = "sink", type = Type.OBJECT, class = "PluginHost::IPlugin::INotification" } } }, 
    [38] = { name = "State", retvals = {  { type = Type.ENUMU8, enum = "PluginHost::IShell::state" } } }, 
    [39] = { name = "QueryInterfaceByCallsign", retvals = {  { type = Type.OBJECT, interface_param = 1 } }, params = {  { name = "id", type = Type.INTERFACE },  { name = "name", type = Type.STRING } } }, 
    [40] = { name = "Activate", retvals = {  { type = Type.HRESULT } }, params = {  { type = Type.ENUMU8, enum = "PluginHost::IShell::reason" } } }, 
    [41] = { name = "Deactivate", retvals = {  { type = Type.HRESULT } }, params = {  { type = Type.ENUMU8, enum = "PluginHost::IShell::reason" } } }, 
    [42] = { name = "Unavailable", retvals = {  { type = Type.HRESULT } }, params = {  { type = Type.ENUMU8, enum = "PluginHost::IShell::reason" } } }, 
    [43] = { name = "Hibernate", retvals = {  { type = Type.HRESULT } }, params = {  { type = Type.ENUMU8, enum = "PluginHost::IShell::reason" } } }, 
    [44] = { name = "Reason", retvals = {  { type = Type.ENUMU8, enum = "PluginHost::IShell::reason" } } }, 
    [45] = { name = "Submit", retvals = {  { type = Type.UINT32 } }, params = {  { name = "Id", type = Type.UINT32 } } }, 
    [46] = { name = "COMLink", retvals = {  { type = Type.OBJECT, class = "PluginHost::IShell::ICOMLink" } } } 
}

--  IStateControl.h
INTERFACES[49] = "PluginHost::IStateControl"
METHODS[49] = {
    [3] = { name = "Configure", retvals = {  { type = Type.HRESULT } }, params = {  { name = "framework", type = Type.OBJECT, class = "PluginHost::IShell" } } }, 
    [4] = { name = "State", retvals = {  { type = Type.ENUMU16, enum = "PluginHost::IStateControl::state" } } }, 
    [5] = { name = "Request", retvals = {  { type = Type.HRESULT } }, params = {  { name = "state", type = Type.ENUMU16, enum = "PluginHost::IStateControl::command" } } }, 
    [6] = { name = "Register", params = {  { name = "notification", type = Type.OBJECT, class = "PluginHost::IStateControl::INotification" } } }, 
    [7] = { name = "Unregister", params = {  { name = "notification", type = Type.OBJECT, class = "PluginHost::IStateControl::INotification" } } } 
}

INTERFACES[50] = "PluginHost::IStateControl::INotification"
METHODS[50] = {
    [3] = { name = "StateChange", params = {  { name = "state", type = Type.ENUMU16, enum = "PluginHost::IStateControl::state" } } } 
}

--  ISubSystem.h
INTERFACES[62] = "PluginHost::IMetadata"
METHODS[62] = {
    [3] = { name = "BuildTreeHash", retvals = {  { type = Type.STRING } } }, 
    [4] = { name = "Major", retvals = {  { type = Type.UINT8 } } }, 
    [5] = { name = "Minor", retvals = {  { type = Type.UINT8 } } }, 
    [6] = { name = "Patch", retvals = {  { type = Type.UINT8 } } } 
}

INTERFACES[51] = "PluginHost::ISubSystem"
METHODS[51] = {
    [3] = { name = "Register", params = {  { name = "notification", type = Type.OBJECT, class = "PluginHost::ISubSystem::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "notification", type = Type.OBJECT, class = "PluginHost::ISubSystem::INotification" } } }, 
    [5] = { name = "BuildTreeHash", retvals = {  { type = Type.STRING } } }, 
    [6] = { name = "Set", params = {  { name = "type", type = Type.ENUMU32, enum = "PluginHost::ISubSystem::subsystem" },  { name = "information", type = Type.OBJECT, class = "Core::IUnknown" } } }, 
    [7] = { name = "Get", retvals = {  { type = Type.OBJECT, class = "Core::IUnknown" } }, params = {  { name = "type", type = Type.ENUMU32, enum = "PluginHost::ISubSystem::subsystem" } } }, 
    [8] = { name = "IsActive", retvals = {  { type = Type.BOOL } }, params = {  { name = "type", type = Type.ENUMU32, enum = "PluginHost::ISubSystem::subsystem" } } } 
}

INTERFACES[52] = "PluginHost::ISubSystem::INotification"
METHODS[52] = {
    [3] = { name = "Updated" } 
}

INTERFACES[57] = "PluginHost::ISubSystem::ISecurity"
METHODS[57] = {
    [3] = { name = "Callsign", retvals = {  { type = Type.STRING } } } 
}

INTERFACES[53] = "PluginHost::ISubSystem::IInternet"
METHODS[53] = {
    [3] = { name = "PublicIPAddress", retvals = {  { type = Type.STRING } } }, 
    [4] = { name = "NetworkType", retvals = {  { type = Type.ENUMU8, enum = "PluginHost::ISubSystem::IInternet::network_type" } } } 
}

INTERFACES[54] = "PluginHost::ISubSystem::ILocation"
METHODS[54] = {
    [3] = { name = "TimeZone", retvals = {  { type = Type.STRING } } }, 
    [4] = { name = "Country", retvals = {  { type = Type.STRING } } }, 
    [5] = { name = "Region", retvals = {  { type = Type.STRING } } }, 
    [6] = { name = "City", retvals = {  { type = Type.STRING } } } 
}

INTERFACES[55] = "PluginHost::ISubSystem::IIdentifier"
METHODS[55] = {
    [3] = { name = "Identifier", retvals = {  { type = Type.UINT8 },  { name = "buffer", type = Type.BUFFER8, length_param = "length" } }, params = {  { name = "length", type = Type.UINT8 } } }, 
    [4] = { name = "Architecture", retvals = {  { type = Type.STRING } } }, 
    [5] = { name = "Chipset", retvals = {  { type = Type.STRING } } }, 
    [6] = { name = "FirmwareVersion", retvals = {  { type = Type.STRING } } } 
}

INTERFACES[56] = "PluginHost::ISubSystem::ITime"
METHODS[56] = {
    [3] = { name = "TimeSync", retvals = {  { type = Type.UINT64 } } } 
}

INTERFACES[58] = "PluginHost::ISubSystem::IProvisioning"
METHODS[58] = {
    [3] = { name = "Storage", retvals = {  { type = Type.STRING } } }, 
    [4] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.STRING } } }, 
    [5] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.STRING } } }, 
    [6] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [7] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [8] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [9] = { name = "Current", retvals = {  { type = Type.STRING } } } 
}

INTERFACES[59] = "PluginHost::ISubSystem::IDecryption"
METHODS[59] = {
    [3] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.STRING } } }, 
    [4] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.STRING } } }, 
    [5] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [7] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Current", retvals = {  { type = Type.STRING } } } 
}

--  IAmazonPrime.h
INTERFACES[880] = "Exchange::IAmazonPrime"
METHODS[880] = {
    [3] = { name = "Register", params = {  { name = "ignition", type = Type.OBJECT, class = "Exchange::IAmazonPrime::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "ignition", type = Type.OBJECT, class = "Exchange::IAmazonPrime::INotification" } } }, 
    [5] = { name = "Send", retvals = {  { type = Type.HRESULT } }, params = {  { name = "message", type = Type.STRING } } } 
}

INTERFACES[881] = "Exchange::IAmazonPrime::INotification"
METHODS[881] = {
    [3] = { name = "Receive", params = {  { name = "message", type = Type.STRING } } } 
}

--  IApplication.h
INTERFACES[928] = "Exchange::IApplication"
METHODS[928] = {
    [3] = { name = "Register", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IApplication::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IApplication::INotification" } } }, 
    [5] = { name = "Reset", retvals = {  { type = Type.HRESULT } }, params = {  { name = "type", type = Type.ENUMU8, enum = "Exchange::IApplication::resettype" } } }, 
    [6] = { name = "Identifier", retvals = {  { type = Type.HRESULT },  { name = "id", type = Type.STRING } } }, 
    [7] = { name = "ContentLink", retvals = {  { type = Type.HRESULT } }, params = {  { name = "link", type = Type.STRING } } }, 
    [8] = { name = "LaunchPoint", retvals = {  { type = Type.HRESULT },  { name = "point", type = Type.ENUMU8, enum = "Exchange::IApplication::launchpointtype" } } }, 
    [9] = { name = "LaunchPoint", retvals = {  { type = Type.HRESULT } }, params = {  { type = Type.ENUMU8, enum = "Exchange::IApplication::launchpointtype" } } }, 
    [10] = { name = "Visible", retvals = {  { type = Type.HRESULT },  { name = "visiblity", type = Type.BOOL } } }, 
    [11] = { name = "Visible", retvals = {  { type = Type.HRESULT } }, params = {  { type = Type.BOOL } } }, 
    [12] = { name = "Language", retvals = {  { type = Type.HRESULT },  { name = "language", type = Type.STRING } } }, 
    [13] = { name = "Language", retvals = {  { type = Type.HRESULT } }, params = {  { type = Type.STRING } } } 
}

INTERFACES[929] = "Exchange::IApplication::INotification"
METHODS[929] = {
    [3] = { name = "VisibilityChange", params = {  { name = "hidden", type = Type.BOOL } } } 
}

--  IAVNClient.h
INTERFACES[416] = "Exchange::IAVNClient"
METHODS[416] = {
    [3] = { name = "Configure", retvals = {  { type = Type.UINT32 } }, params = {  { type = Type.OBJECT, class = "PluginHost::IShell" } } }, 
    [4] = { name = "Launch", params = {  { type = Type.STRING } } } 
}

--  IAVSClient.h
INTERFACES[833] = "Exchange::IAVSController"
METHODS[833] = {
    [3] = { name = "Register", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IAVSController::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IAVSController::INotification" } } }, 
    [5] = { name = "Mute", retvals = {  { type = Type.HRESULT } }, params = {  { name = "muted", type = Type.BOOL } } }, 
    [6] = { name = "Record", retvals = {  { type = Type.HRESULT } }, params = {  { name = "started", type = Type.BOOL } } } 
}

INTERFACES[834] = "Exchange::IAVSController::INotification"
METHODS[834] = {
    [3] = { name = "DialogueStateChange", params = {  { name = "state", type = Type.ENUMU8, enum = "Exchange::IAVSController::INotification::dialoguestate" } } } 
}

INTERFACES[832] = "Exchange::IAVSClient"
METHODS[832] = {
    [3] = { name = "Initialize", retvals = {  { type = Type.BOOL } }, params = {  { name = "service", type = Type.OBJECT, class = "PluginHost::IShell" },  { name = "configuration", type = Type.STRING } } }, 
    [4] = { name = "Deinitialize", retvals = {  { type = Type.BOOL } } }, 
    [5] = { name = "Controller", retvals = {  { type = Type.OBJECT, class = "Exchange::IAVSController" } } }, 
    [6] = { name = "StateChange", params = {  { name = "audioSource", type = Type.OBJECT, class = "PluginHost::IShell" } } } 
}

--  IBluetoothAudio.h
INTERFACES[1074] = "RPC::IIteratorType<Exchange::IBluetoothAudioSink::audiocodec, Exchange::ID_BLUETOOTHAUDIOSINK_AUDIOCODECITERATOR>"
METHODS[1074] = {
    [3] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IBluetoothAudioSink::audiocodec" } } }, 
    [4] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IBluetoothAudioSink::audiocodec" } } }, 
    [5] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [7] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Current", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IBluetoothAudioSink::audiocodec" } } } 
}

INTERFACES[1075] = "RPC::IIteratorType<Exchange::IBluetoothAudioSink::drmscheme, Exchange::ID_BLUETOOTHAUDIOSINK_DRMSCHEMEITERATOR>"
METHODS[1075] = {
    [3] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IBluetoothAudioSink::drmscheme" } } }, 
    [4] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IBluetoothAudioSink::drmscheme" } } }, 
    [5] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [7] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Current", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IBluetoothAudioSink::drmscheme" } } } 
}

INTERFACES[1072] = "Exchange::IBluetoothAudioSink"
METHODS[1072] = {
    [3] = { name = "Callback", retvals = {  { type = Type.HRESULT } }, params = {  { name = "callback", type = Type.OBJECT, class = "Exchange::IBluetoothAudioSink::ICallback" } } }, 
    [4] = { name = "Assign", retvals = {  { type = Type.HRESULT } }, params = {  { name = "address", type = Type.STRING } } }, 
    [5] = { name = "Revoke", retvals = {  { type = Type.HRESULT } } }, 
    [6] = { name = "Latency", retvals = {  { type = Type.HRESULT } }, params = {  { name = "latency", type = Type.INT16 } } }, 
    [7] = { name = "Latency", retvals = {  { type = Type.HRESULT },  { name = "latency", type = Type.INT16 } } }, 
    [8] = { name = "State", retvals = {  { type = Type.HRESULT },  { name = "sinkState", type = Type.ENUMU8, enum = "Exchange::IBluetoothAudioSink::state" } } }, 
    [9] = { name = "Type", retvals = {  { type = Type.HRESULT },  { name = "type", type = Type.ENUMU8, enum = "Exchange::IBluetoothAudioSink::devicetype" } } }, 
    [10] = { name = "SupportedCodecs", retvals = {  { type = Type.HRESULT },  { name = "codecs", type = Type.OBJECT, class = "RPC::IIteratorType<Exchange::IBluetoothAudioSink::audiocodec, Exchange::ID_BLUETOOTHAUDIOSINK_AUDIOCODECITERATOR>" } } }, 
    [11] = { name = "SupportedDRMs", retvals = {  { type = Type.HRESULT },  { name = "drms", type = Type.OBJECT, class = "RPC::IIteratorType<Exchange::IBluetoothAudioSink::drmscheme, Exchange::ID_BLUETOOTHAUDIOSINK_DRMSCHEMEITERATOR>" } } }, 
    [12] = { name = "Codec", retvals = {  { type = Type.HRESULT },  { name = "properties", type = Type.POD, class = "Exchange::IBluetoothAudioSink::CodecProperties", pod = { { name = Codec, type = Type.ENUMU8, enum = "Exchange::IBluetoothAudioSink::audiocodec" }, { name = Settings, type = Type.STRING } } } } }, 
    [13] = { name = "DRM", retvals = {  { type = Type.HRESULT },  { name = "properties", type = Type.POD, class = "Exchange::IBluetoothAudioSink::DRMProperties", pod = { { name = DRM, type = Type.ENUMU8, enum = "Exchange::IBluetoothAudioSink::drmscheme" }, { name = Settings, type = Type.STRING } } } } }, 
    [14] = { name = "Stream", retvals = {  { type = Type.HRESULT },  { name = "properties", type = Type.POD, class = "Exchange::IBluetoothAudioSink::StreamProperties", pod = { { name = SampleRate, type = Type.UINT32 }, { name = BitRate, type = Type.UINT32 }, { name = Channels, type = Type.UINT8 }, { name = Resolution, type = Type.UINT8 }, { name = IsResampling, type = Type.BOOL } } } } } 
}

INTERFACES[1076] = "Exchange::IBluetoothAudioSink::IControl"
METHODS[1076] = {
    [3] = { name = "Acquire", retvals = {  { type = Type.UINT32 } }, params = {  { name = "connector", type = Type.STRING },  { name = "format", type = Type.POD, class = "Exchange::IBluetoothAudioSink::IControl::Format", pod = { { name = SampleRate, type = Type.UINT32 }, { name = FrameRate, type = Type.UINT16 }, { name = Resolution, type = Type.UINT8 }, { name = Channels, type = Type.UINT8 } } } } }, 
    [4] = { name = "Relinquish", retvals = {  { type = Type.UINT32 } } }, 
    [5] = { name = "Speed", retvals = {  { type = Type.UINT32 } }, params = {  { name = "speed", type = Type.INT8 } } }, 
    [6] = { name = "Time", retvals = {  { type = Type.UINT32 },  { name = "position", type = Type.UINT32 } } }, 
    [7] = { name = "Delay", retvals = {  { type = Type.UINT32 },  { name = "delay", type = Type.UINT32 } } } 
}

INTERFACES[1073] = "Exchange::IBluetoothAudioSink::ICallback"
METHODS[1073] = {
    [3] = { name = "Updated" } 
}

--  IBluetooth.h
--  IBrowser.h
INTERFACES[64] = "Exchange::IBrowser"
METHODS[64] = {
    [3] = { name = "Register", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IBrowser::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IBrowser::INotification" } } }, 
    [5] = { name = "SetURL", params = {  { name = "URL", type = Type.STRING } } }, 
    [6] = { name = "GetURL", retvals = {  { type = Type.STRING } } }, 
    [7] = { name = "GetFPS", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Hide", params = {  { name = "hidden", type = Type.BOOL } } } 
}

INTERFACES[66] = "Exchange::IBrowser::INotification"
METHODS[66] = {
    [3] = { name = "LoadFinished", params = {  { name = "URL", type = Type.STRING } } }, 
    [4] = { name = "URLChanged", params = {  { name = "URL", type = Type.STRING } } }, 
    [5] = { name = "Hidden", params = {  { name = "hidden", type = Type.BOOL } } }, 
    [6] = { name = "Closure" } 
}

INTERFACES[65] = "Exchange::IWebBrowser"
METHODS[65] = {
    [3] = { name = "Register", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IWebBrowser::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IWebBrowser::INotification" } } }, 
    [5] = { name = "URL", retvals = {  { type = Type.HRESULT },  { name = "url", type = Type.STRING } } }, 
    [6] = { name = "URL", retvals = {  { type = Type.HRESULT } }, params = {  { name = "url", type = Type.STRING } } }, 
    [7] = { name = "Visibility", retvals = {  { type = Type.HRESULT },  { name = "visible", type = Type.ENUMU8, enum = "Exchange::IWebBrowser::VisibilityType" } } }, 
    [8] = { name = "Visibility", retvals = {  { type = Type.HRESULT } }, params = {  { name = "visible", type = Type.ENUMU8, enum = "Exchange::IWebBrowser::VisibilityType" } } }, 
    [9] = { name = "FPS", retvals = {  { type = Type.HRESULT },  { name = "fps", type = Type.UINT8 } } }, 
    [10] = { name = "HeaderList", retvals = {  { type = Type.HRESULT },  { name = "headerlist", type = Type.STRING } } }, 
    [11] = { name = "HeaderList", retvals = {  { type = Type.HRESULT } }, params = {  { name = "headerlist", type = Type.STRING } } }, 
    [12] = { name = "UserAgent", retvals = {  { type = Type.HRESULT },  { name = "useragent", type = Type.STRING } } }, 
    [13] = { name = "UserAgent", retvals = {  { type = Type.HRESULT } }, params = {  { name = "useragent", type = Type.STRING } } }, 
    [14] = { name = "LocalStorageEnabled", retvals = {  { type = Type.HRESULT },  { name = "enabled", type = Type.BOOL } } }, 
    [15] = { name = "LocalStorageEnabled", retvals = {  { type = Type.HRESULT } }, params = {  { name = "enabled", type = Type.BOOL } } }, 
    [16] = { name = "HTTPCookieAcceptPolicy", retvals = {  { type = Type.HRESULT },  { name = "policy", type = Type.ENUMU8, enum = "Exchange::IWebBrowser::HTTPCookieAcceptPolicyType" } } }, 
    [17] = { name = "HTTPCookieAcceptPolicy", retvals = {  { type = Type.HRESULT } }, params = {  { name = "policy", type = Type.ENUMU8, enum = "Exchange::IWebBrowser::HTTPCookieAcceptPolicyType" } } }, 
    [18] = { name = "BridgeReply", retvals = {  { type = Type.HRESULT } }, params = {  { name = "payload", type = Type.STRING } } }, 
    [19] = { name = "BridgeEvent", retvals = {  { type = Type.HRESULT } }, params = {  { name = "payload", type = Type.STRING } } }, 
    [20] = { name = "CollectGarbage", retvals = {  { type = Type.HRESULT } } } 
}

INTERFACES[70] = "Exchange::IWebBrowser::INotification"
METHODS[70] = {
    [3] = { name = "LoadFinished", params = {  { name = "URL", type = Type.STRING },  { name = "httpstatus", type = Type.INT32 } } }, 
    [4] = { name = "LoadFailed", params = {  { name = "URL", type = Type.STRING } } }, 
    [5] = { name = "URLChange", params = {  { name = "URL", type = Type.STRING },  { name = "loaded", type = Type.BOOL } } }, 
    [6] = { name = "VisibilityChange", params = {  { name = "hidden", type = Type.BOOL } } }, 
    [7] = { name = "PageClosure" }, 
    [8] = { name = "BridgeQuery", params = {  { name = "message", type = Type.STRING } } } 
}

INTERFACES[68] = "Exchange::IBrowserResources"
METHODS[68] = {
    [3] = { name = "Headers", retvals = {  { type = Type.HRESULT },  { name = "header", type = Type.OBJECT, class = "RPC::IIteratorType<string, RPC::ID_STRINGITERATOR>" } } }, 
    [4] = { name = "Headers", retvals = {  { type = Type.HRESULT } }, params = {  { name = "header", type = Type.OBJECT, class = "RPC::IIteratorType<string, RPC::ID_STRINGITERATOR>" } } }, 
    [5] = { name = "UserScripts", retvals = {  { type = Type.HRESULT },  { name = "uris", type = Type.OBJECT, class = "RPC::IIteratorType<string, RPC::ID_STRINGITERATOR>" } } }, 
    [6] = { name = "UserScripts", retvals = {  { type = Type.HRESULT } }, params = {  { name = "uris", type = Type.OBJECT, class = "RPC::IIteratorType<string, RPC::ID_STRINGITERATOR>" } } }, 
    [7] = { name = "UserStyleSheets", retvals = {  { type = Type.HRESULT },  { name = "uris", type = Type.OBJECT, class = "RPC::IIteratorType<string, RPC::ID_STRINGITERATOR>" } } }, 
    [8] = { name = "UserStyleSheets", retvals = {  { type = Type.HRESULT } }, params = {  { name = "uris", type = Type.OBJECT, class = "RPC::IIteratorType<string, RPC::ID_STRINGITERATOR>" } } } 
}

INTERFACES[69] = "Exchange::IBrowserSecurity"
METHODS[69] = {
    [3] = { name = "SecurityProfile", retvals = {  { type = Type.HRESULT },  { name = "profile", type = Type.STRING } } }, 
    [4] = { name = "SecurityProfile", retvals = {  { type = Type.HRESULT } }, params = {  { name = "profile", type = Type.STRING } } }, 
    [5] = { name = "MixedContentPolicy", retvals = {  { type = Type.HRESULT },  { name = "policy", type = Type.ENUMU8, enum = "Exchange::IBrowserSecurity::MixedContentPolicyType" } } }, 
    [6] = { name = "MixedContentPolicy", retvals = {  { type = Type.HRESULT } }, params = {  { name = "policy", type = Type.ENUMU8, enum = "Exchange::IBrowserSecurity::MixedContentPolicyType" } } } 
}

INTERFACES[71] = "Exchange::IBrowserScripting"
METHODS[71] = {
    [3] = { name = "RunJavaScript", retvals = {  { type = Type.HRESULT } }, params = {  { name = "script", type = Type.STRING } } }, 
    [4] = { name = "AddUserScript", retvals = {  { type = Type.HRESULT } }, params = {  { name = "script", type = Type.STRING },  { name = "topFrameOnly", type = Type.BOOL } } }, 
    [5] = { name = "RemoveAllUserScripts", retvals = {  { type = Type.HRESULT } } } 
}

INTERFACES[72] = "Exchange::IBrowserCookieJar"
METHODS[72] = {
    [3] = { name = "Register", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IBrowserCookieJar::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IBrowserCookieJar::INotification" } } }, 
    [5] = { name = "CookieJar", retvals = {  { type = Type.HRESULT },  { name = "version", type = Type.UINT32 },  { name = "checksum", type = Type.UINT32 },  { name = "payload", type = Type.STRING } } }, 
    [6] = { name = "CookieJar", retvals = {  { type = Type.HRESULT } }, params = {  { name = "version", type = Type.UINT32 },  { name = "checksum", type = Type.UINT32 },  { name = "payload", type = Type.STRING } } } 
}

INTERFACES[73] = "Exchange::IBrowserCookieJar::INotification"
METHODS[73] = {
    [3] = { name = "CookieJarChanged" } 
}

--  IButler.h
INTERFACES[1040] = "Exchange::IButler"
METHODS[1040] = {
    [3] = { name = "Register", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IButler::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IButler::INotification" } } }, 
    [5] = { name = "Element", retvals = {  { type = Type.OBJECT, class = "Exchange::IValuePoint" } }, params = {  { name = "name", type = Type.STRING } } }, 
    [6] = { name = "Element", retvals = {  { type = Type.OBJECT, class = "Exchange::IValuePoint" } }, params = {  { name = "id", type = Type.UINT32 } } }, 
    [7] = { name = "Source", retvals = {  { type = Type.STRING } }, params = {  { name = "module", type = Type.UINT32 } } }, 
    [8] = { name = "Branch", retvals = {  { type = Type.UINT32 } }, params = {  { name = "path", type = Type.STRING } } }, 
    [9] = { name = "Link", retvals = {  { type = Type.UINT32 } }, params = {  { name = "path", type = Type.STRING },  { name = "id", type = Type.UINT32 } } }, 
    [10] = { name = "Move", retvals = {  { type = Type.UINT32 } }, params = {  { name = "path", type = Type.STRING },  { name = "newName", type = Type.STRING } } }, 
    [11] = { name = "Delete", retvals = {  { type = Type.UINT32 } }, params = {  { name = "path", type = Type.STRING } } }, 
    [12] = { name = "Orphans", retvals = {  { type = Type.OBJECT, class = "RPC::IValueIterator" } }, params = {  { name = "module", type = Type.UINT8 } } } 
}

INTERFACES[1041] = "Exchange::IButler::INotification"
METHODS[1041] = {
    [3] = { name = "Added", retvals = {  { name = "element", type = Type.OBJECT, class = "Exchange::IValuePoint" } } }, 
    [4] = { name = "Removed", retvals = {  { name = "element", type = Type.OBJECT, class = "Exchange::IValuePoint" } } }, 
    [5] = { name = "Updated", retvals = {  { name = "element", type = Type.OBJECT, class = "Exchange::IValuePoint" } } }, 
    [6] = { name = "Metadata", retvals = {  { name = "element", type = Type.OBJECT, class = "Exchange::IValuePoint" } } } 
}

--  ICapture.h
--  IComposition.h
INTERFACES[946] = "RPC::IIteratorType<Exchange::IDeviceAudioCapabilities::AudioOutput, Exchange::ID_DEVICE_CAPABILITIES_AUDIO_OUTPUT>"
METHODS[946] = {
    [3] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IDeviceAudioCapabilities::AudioOutput" } } }, 
    [4] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IDeviceAudioCapabilities::AudioOutput" } } }, 
    [5] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [7] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Current", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IDeviceAudioCapabilities::AudioOutput" } } } 
}

INTERFACES[947] = "RPC::IIteratorType<Exchange::IDeviceAudioCapabilities::AudioCapability, Exchange::ID_DEVICE_CAPABILITIES_AUDIO_CAPABILITY>"
METHODS[947] = {
    [3] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IDeviceAudioCapabilities::AudioCapability" } } }, 
    [4] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IDeviceAudioCapabilities::AudioCapability" } } }, 
    [5] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [7] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Current", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IDeviceAudioCapabilities::AudioCapability" } } } 
}

INTERFACES[948] = "RPC::IIteratorType<Exchange::IDeviceAudioCapabilities::MS12Capability, Exchange::ID_DEVICE_CAPABILITIES_AUDIO_MS12_CAPABILITY>"
METHODS[948] = {
    [3] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IDeviceAudioCapabilities::MS12Capability" } } }, 
    [4] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IDeviceAudioCapabilities::MS12Capability" } } }, 
    [5] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [7] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Current", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IDeviceAudioCapabilities::MS12Capability" } } } 
}

INTERFACES[949] = "RPC::IIteratorType<Exchange::IDeviceAudioCapabilities::MS12Profile, Exchange::ID_DEVICE_CAPABILITIES_AUDIO_MS12_PROFILE>"
METHODS[949] = {
    [3] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IDeviceAudioCapabilities::MS12Profile" } } }, 
    [4] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IDeviceAudioCapabilities::MS12Profile" } } }, 
    [5] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [7] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Current", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IDeviceAudioCapabilities::MS12Profile" } } } 
}

INTERFACES[951] = "RPC::IIteratorType<Exchange::IDeviceVideoCapabilities::VideoOutput, Exchange::ID_DEVICE_CAPABILITIES_VIDEO_OUTPUT>"
METHODS[951] = {
    [3] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IDeviceVideoCapabilities::VideoOutput" } } }, 
    [4] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IDeviceVideoCapabilities::VideoOutput" } } }, 
    [5] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [7] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Current", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IDeviceVideoCapabilities::VideoOutput" } } } 
}

INTERFACES[952] = "RPC::IIteratorType<Exchange::IDeviceVideoCapabilities::ScreenResolution, Exchange::ID_DEVICE_CAPABILITIES_RESOLUTION>"
METHODS[952] = {
    [3] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IDeviceVideoCapabilities::ScreenResolution" } } }, 
    [4] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IDeviceVideoCapabilities::ScreenResolution" } } }, 
    [5] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [7] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Current", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IDeviceVideoCapabilities::ScreenResolution" } } } 
}

INTERFACES[560] = "Exchange::IComposition"
METHODS[560] = {
    [3] = { name = "Register", params = {  { name = "notification", type = Type.OBJECT, class = "Exchange::IComposition::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "notification", type = Type.OBJECT, class = "Exchange::IComposition::INotification" } } }, 
    [5] = { name = "Configure", retvals = {  { type = Type.UINT32 } }, params = {  { name = "service", type = Type.OBJECT, class = "PluginHost::IShell" } } }, 
    [6] = { name = "Resolution", retvals = {  { type = Type.UINT32 } }, params = {  { type = Type.ENUMU8, enum = "Exchange::IDeviceVideoCapabilities::ScreenResolution" } } }, 
    [7] = { name = "Resolution", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IDeviceVideoCapabilities::ScreenResolution" } } } 
}

INTERFACES[561] = "Exchange::IComposition::IClient"
METHODS[561] = {
    [3] = { name = "Name", retvals = {  { type = Type.STRING } } }, 
    [4] = { name = "Opacity", params = {  { name = "value", type = Type.UINT32 } } }, 
    [5] = { name = "Geometry", retvals = {  { type = Type.UINT32 } }, params = {  { name = "rectangle", type = Type.POD, class = "Exchange::IComposition::Rectangle", pod = { { name = x, type = Type.UINT32 }, { name = y, type = Type.UINT32 }, { name = width, type = Type.UINT32 }, { name = height, type = Type.UINT32 } } } } }, 
    [6] = { name = "Geometry", retvals = {  { type = Type.POD, class = "Exchange::IComposition::Rectangle", pod = { { name = x, type = Type.UINT32 }, { name = y, type = Type.UINT32 }, { name = width, type = Type.UINT32 }, { name = height, type = Type.UINT32 } } } } }, 
    [7] = { name = "ZOrder", retvals = {  { type = Type.UINT32 } }, params = {  { name = "index", type = Type.UINT16 } } }, 
    [8] = { name = "ZOrder", retvals = {  { type = Type.UINT32 } } } 
}

INTERFACES[565] = "Exchange::IComposition::IClient::IProperties"
METHODS[565] = {
    [3] = { name = "Stride", retvals = {  { type = Type.UINT32 } } }, 
    [4] = { name = "Format", retvals = {  { type = Type.UINT32 } } }, 
    [5] = { name = "Offset", retvals = {  { type = Type.UINT32 } } }, 
    [6] = { name = "Modifier", retvals = {  { type = Type.UINT64 } } } 
}

INTERFACES[562] = "Exchange::IComposition::IRender"
METHODS[562] = {
    [3] = { name = "ScanOut" } 
}

INTERFACES[563] = "Exchange::IComposition::INotification"
METHODS[563] = {
    [3] = { name = "Attached", params = {  { name = "name", type = Type.STRING },  { name = "client", type = Type.OBJECT, class = "Exchange::IComposition::IClient" } } }, 
    [4] = { name = "Detached", params = {  { name = "name", type = Type.STRING } } } 
}

INTERFACES[564] = "Exchange::IComposition::IDisplay"
METHODS[564] = {
    [3] = { name = "Native", retvals = {  { type = Type.OBJECT } } }, 
    [4] = { name = "Port", retvals = {  { type = Type.STRING } } }, 
    [5] = { name = "CreateClient", retvals = {  { type = Type.OBJECT, class = "Exchange::IComposition::IClient" } }, params = {  { name = "name", type = Type.STRING },  { name = "width", type = Type.UINT32 },  { name = "height", type = Type.UINT32 } } }, 
    [6] = { name = "Resolution", retvals = {  { type = Type.UINT32 } }, params = {  { type = Type.ENUMU8, enum = "Exchange::IDeviceVideoCapabilities::ScreenResolution" } } }, 
    [7] = { name = "Resolution", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IDeviceVideoCapabilities::ScreenResolution" } } } 
}

INTERFACES[992] = "Exchange::IBrightness"
METHODS[992] = {
    [3] = { name = "SdrToHdrGraphicsBrightness", retvals = {  { type = Type.UINT32 },  { name = "brightness", type = Type.ENUMU8, enum = "Exchange::IBrightness::Brightness" } } }, 
    [4] = { name = "SdrToHdrGraphicsBrightness", retvals = {  { type = Type.UINT32 } }, params = {  { name = "brightness", type = Type.ENUMU8, enum = "Exchange::IBrightness::Brightness" } } } 
}

--  IConfiguration.h
INTERFACES[930] = "Exchange::IConfiguration"
METHODS[930] = {
    [3] = { name = "Configure", retvals = {  { type = Type.UINT32 } }, params = {  { name = "framework", type = Type.OBJECT, class = "PluginHost::IShell" } } } 
}

--  IContentDecryption.h
INTERFACES[224] = "Exchange::IContentDecryption"
METHODS[224] = {
    [3] = { name = "Initialize", retvals = {  { type = Type.UINT32 } }, params = {  { name = "service", type = Type.OBJECT, class = "PluginHost::IShell" } } }, 
    [4] = { name = "Deinitialize", params = {  { name = "service", type = Type.OBJECT, class = "PluginHost::IShell" } } }, 
    [5] = { name = "Reset", retvals = {  { type = Type.UINT32 } } }, 
    [6] = { name = "Systems", retvals = {  { type = Type.OBJECT, class = "RPC::IStringIterator" } } }, 
    [7] = { name = "Designators", retvals = {  { type = Type.OBJECT, class = "RPC::IStringIterator" } }, params = {  { name = "keySystem", type = Type.STRING } } }, 
    [8] = { name = "Sessions", retvals = {  { type = Type.OBJECT, class = "RPC::IStringIterator" } }, params = {  { name = "keySystem", type = Type.STRING } } } 
}

INTERFACES[225] = "Exchange::IContentDecryption::INotification"
METHODS[225] = {
    [3] = { name = "initializationStatus", params = {  { name = "drm", type = Type.STRING },  { name = "status", type = Type.ENUMU8, enum = "Exchange::IContentDecryption::Status" } } } 
}

--  ICustomerCareOperations.h
INTERFACES[896] = "Exchange::ICustomerCareOperations"
METHODS[896] = {
    [3] = { name = "FactoryReset", retvals = {  { type = Type.HRESULT } } } 
}

--  IDeviceInfo.h
INTERFACES[944] = "Exchange::IDeviceInfo"
METHODS[944] = {
    [3] = { name = "Configure", retvals = {  { type = Type.UINT32 } }, params = {  { name = "service", type = Type.OBJECT, class = "PluginHost::IShell" } } }, 
    [4] = { name = "SerialNumber", retvals = {  { type = Type.UINT32 },  { name = "value", type = Type.STRING } } }, 
    [5] = { name = "Sku", retvals = {  { type = Type.UINT32 },  { name = "value", type = Type.STRING } } }, 
    [6] = { name = "Make", retvals = {  { type = Type.UINT32 },  { name = "value", type = Type.STRING } } }, 
    [7] = { name = "ModelName", retvals = {  { type = Type.UINT32 },  { name = "value", type = Type.STRING } } }, 
    [8] = { name = "ModelYear", retvals = {  { type = Type.UINT32 },  { name = "value", type = Type.UINT16 } } }, 
    [9] = { name = "FriendlyName", retvals = {  { type = Type.UINT32 },  { name = "value", type = Type.STRING } } }, 
    [10] = { name = "DeviceType", retvals = {  { type = Type.UINT32 },  { name = "value", type = Type.STRING } } }, 
    [11] = { name = "PlatformName", retvals = {  { type = Type.UINT32 },  { name = "value", type = Type.STRING } } }, 
    [12] = { name = "DistributorId", retvals = {  { type = Type.UINT32 },  { name = "value", type = Type.STRING } } } 
}

INTERFACES[945] = "Exchange::IDeviceAudioCapabilities"
METHODS[945] = {
    [3] = { name = "AudioOutputs", retvals = {  { type = Type.UINT32 },  { name = "audioOutputs", type = Type.OBJECT, class = "RPC::IIteratorType<Exchange::IDeviceAudioCapabilities::AudioOutput, Exchange::ID_DEVICE_CAPABILITIES_AUDIO_OUTPUT>" } } }, 
    [4] = { name = "AudioCapabilities", retvals = {  { type = Type.UINT32 },  { name = "audioCapabilities", type = Type.OBJECT, class = "RPC::IIteratorType<Exchange::IDeviceAudioCapabilities::AudioCapability, Exchange::ID_DEVICE_CAPABILITIES_AUDIO_CAPABILITY>" } }, params = {  { name = "audioOutput", type = Type.ENUMU8, enum = "Exchange::IDeviceAudioCapabilities::AudioOutput" } } }, 
    [5] = { name = "MS12Capabilities", retvals = {  { type = Type.UINT32 },  { name = "ms12Capabilities", type = Type.OBJECT, class = "RPC::IIteratorType<Exchange::IDeviceAudioCapabilities::MS12Capability, Exchange::ID_DEVICE_CAPABILITIES_AUDIO_MS12_CAPABILITY>" } }, params = {  { name = "audioOutput", type = Type.ENUMU8, enum = "Exchange::IDeviceAudioCapabilities::AudioOutput" } } }, 
    [6] = { name = "MS12AudioProfiles", retvals = {  { type = Type.UINT32 },  { name = "ms12Profiles", type = Type.OBJECT, class = "RPC::IIteratorType<Exchange::IDeviceAudioCapabilities::MS12Profile, Exchange::ID_DEVICE_CAPABILITIES_AUDIO_MS12_PROFILE>" } }, params = {  { name = "audioOutput", type = Type.ENUMU8, enum = "Exchange::IDeviceAudioCapabilities::AudioOutput" } } } 
}

INTERFACES[950] = "Exchange::IDeviceVideoCapabilities"
METHODS[950] = {
    [3] = { name = "VideoOutputs", retvals = {  { type = Type.UINT32 },  { name = "videoOutputs", type = Type.OBJECT, class = "RPC::IIteratorType<Exchange::IDeviceVideoCapabilities::VideoOutput, Exchange::ID_DEVICE_CAPABILITIES_VIDEO_OUTPUT>" } } }, 
    [4] = { name = "DefaultResolution", retvals = {  { type = Type.UINT32 },  { name = "defaultResolution", type = Type.ENUMU8, enum = "Exchange::IDeviceVideoCapabilities::ScreenResolution" } }, params = {  { name = "videoOutput", type = Type.ENUMU8, enum = "Exchange::IDeviceVideoCapabilities::VideoOutput" } } }, 
    [5] = { name = "Resolutions", retvals = {  { type = Type.UINT32 },  { name = "resolutions", type = Type.OBJECT, class = "RPC::IIteratorType<Exchange::IDeviceVideoCapabilities::ScreenResolution, Exchange::ID_DEVICE_CAPABILITIES_RESOLUTION>" } }, params = {  { name = "videoOutput", type = Type.ENUMU8, enum = "Exchange::IDeviceVideoCapabilities::VideoOutput" } } }, 
    [6] = { name = "Hdcp", retvals = {  { type = Type.UINT32 },  { name = "hdcpVersion", type = Type.ENUMU8, enum = "Exchange::IDeviceVideoCapabilities::CopyProtection" } }, params = {  { name = "videoOutput", type = Type.ENUMU8, enum = "Exchange::IDeviceVideoCapabilities::VideoOutput" } } }, 
    [7] = { name = "HostEDID", retvals = {  { type = Type.UINT32 },  { name = "edid", type = Type.STRING } } }, 
    [8] = { name = "HDR", retvals = {  { type = Type.UINT32 },  { name = "supportsHDR", type = Type.BOOL } } }, 
    [9] = { name = "Atmos", retvals = {  { type = Type.UINT32 },  { name = "supportsAtmos", type = Type.BOOL } } }, 
    [10] = { name = "CEC", retvals = {  { type = Type.UINT32 },  { name = "supportsCEC", type = Type.BOOL } } } 
}

--  IDIALServer.h
INTERFACES[960] = "Exchange::IDIALServer"
METHODS[960] = {
    [3] = { name = "Application", retvals = {  { type = Type.OBJECT, class = "Exchange::IDIALServer::IApplication" } }, params = {  { name = "name", type = Type.STRING } } } 
}

INTERFACES[961] = "Exchange::IDIALServer::IApplication"
METHODS[961] = {
    [3] = { name = "AdditionalDataURL", retvals = {  { type = Type.UINT32 },  { name = "url", type = Type.STRING } } } 
}

--  IDictionary.h
INTERFACES[128] = "Exchange::IDictionary"
METHODS[128] = {
    [3] = { name = "Register", params = {  { name = "nameSpace", type = Type.STRING },  { name = "sink", type = Type.OBJECT, class = "Exchange::IDictionary::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "nameSpace", type = Type.STRING },  { name = "sink", type = Type.OBJECT, class = "Exchange::IDictionary::INotification" } } }, 
    [5] = { name = "Get", retvals = {  { type = Type.BOOL },  { name = "value", type = Type.STRING } }, params = {  { name = "nameSpace", type = Type.STRING },  { name = "key", type = Type.STRING } } }, 
    [6] = { name = "Set", retvals = {  { type = Type.BOOL } }, params = {  { name = "nameSpace", type = Type.STRING },  { name = "key", type = Type.STRING },  { name = "value", type = Type.STRING } } }, 
    [7] = { name = "Get", retvals = {  { type = Type.OBJECT, class = "Exchange::IDictionary::IIterator" } }, params = {  { name = "nameSpace", type = Type.STRING } } } 
}

INTERFACES[129] = "Exchange::IDictionary::INotification"
METHODS[129] = {
    [3] = { name = "Modified", params = {  { name = "nameSpace", type = Type.STRING },  { name = "key", type = Type.STRING },  { name = "value", type = Type.STRING } } } 
}

INTERFACES[130] = "Exchange::IDictionary::IIterator"
METHODS[130] = {
    [3] = { name = "Reset" }, 
    [4] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [5] = { name = "Next", retvals = {  { type = Type.BOOL } } }, 
    [6] = { name = "Key", retvals = {  { type = Type.STRING } } }, 
    [7] = { name = "Value", retvals = {  { type = Type.STRING } } } 
}

--  IDisplayInfo.h
INTERFACES[785] = "RPC::IIteratorType<Exchange::IHDRProperties::HDRType, Exchange::ID_HDR_ITERATOR>"
METHODS[785] = {
    [3] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IHDRProperties::HDRType" } } }, 
    [4] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IHDRProperties::HDRType" } } }, 
    [5] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [7] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Current", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IHDRProperties::HDRType" } } } 
}

INTERFACES[772] = "RPC::IIteratorType<Exchange::IDisplayProperties::ColorimetryType, Exchange::ID_COLORIMETRY_ITERATOR>"
METHODS[772] = {
    [3] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IDisplayProperties::ColorimetryType" } } }, 
    [4] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IDisplayProperties::ColorimetryType" } } }, 
    [5] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [7] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Current", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IDisplayProperties::ColorimetryType" } } } 
}

INTERFACES[769] = "Exchange::IGraphicsProperties"
METHODS[769] = {
    [3] = { name = "TotalGpuRam", retvals = {  { type = Type.HRESULT },  { name = "total", type = Type.UINT64 } } }, 
    [4] = { name = "FreeGpuRam", retvals = {  { type = Type.HRESULT },  { name = "free", type = Type.UINT64 } } } 
}

INTERFACES[770] = "Exchange::IConnectionProperties"
METHODS[770] = {
    [3] = { name = "Register", retvals = {  { type = Type.HRESULT } }, params = {  { type = Type.OBJECT, class = "Exchange::IConnectionProperties::INotification" } } }, 
    [4] = { name = "Unregister", retvals = {  { type = Type.HRESULT } }, params = {  { type = Type.OBJECT, class = "Exchange::IConnectionProperties::INotification" } } }, 
    [5] = { name = "IsAudioPassthrough", retvals = {  { type = Type.HRESULT },  { name = "passthru", type = Type.BOOL } } }, 
    [6] = { name = "Connected", retvals = {  { type = Type.HRESULT },  { name = "isconnected", type = Type.BOOL } } }, 
    [7] = { name = "Width", retvals = {  { type = Type.HRESULT },  { name = "width", type = Type.UINT32 } } }, 
    [8] = { name = "Height", retvals = {  { type = Type.HRESULT },  { name = "height", type = Type.UINT32 } } }, 
    [9] = { name = "VerticalFreq", retvals = {  { type = Type.HRESULT },  { name = "vf", type = Type.UINT32 } } }, 
    [10] = { name = "EDID", retvals = {  { type = Type.HRESULT },  { name = "data", type = Type.BUFFER16, length_param = "length" } } }, 
    [11] = { name = "WidthInCentimeters", retvals = {  { type = Type.HRESULT },  { name = "width", type = Type.UINT8 } } }, 
    [12] = { name = "HeightInCentimeters", retvals = {  { type = Type.HRESULT },  { name = "height", type = Type.UINT8 } } }, 
    [13] = { name = "HDCPProtection", retvals = {  { type = Type.HRESULT },  { name = "value", type = Type.ENUMU8, enum = "Exchange::IConnectionProperties::HDCPProtectionType" } } }, 
    [14] = { name = "HDCPProtection", retvals = {  { type = Type.HRESULT } }, params = {  { name = "value", type = Type.ENUMU8, enum = "Exchange::IConnectionProperties::HDCPProtectionType" } } }, 
    [15] = { name = "PortName", retvals = {  { type = Type.HRESULT },  { name = "name", type = Type.STRING } } } 
}

INTERFACES[773] = "Exchange::IConnectionProperties::INotification"
METHODS[773] = {
    [3] = { name = "Updated", params = {  { name = "event", type = Type.ENUMU8, enum = "Exchange::IConnectionProperties::INotification::Source" } } } 
}

INTERFACES[784] = "Exchange::IHDRProperties"
METHODS[784] = {
    [3] = { name = "TVCapabilities", retvals = {  { type = Type.HRESULT },  { name = "type", type = Type.OBJECT, class = "RPC::IIteratorType<Exchange::IHDRProperties::HDRType, Exchange::ID_HDR_ITERATOR>" } } }, 
    [4] = { name = "STBCapabilities", retvals = {  { type = Type.HRESULT },  { name = "type", type = Type.OBJECT, class = "RPC::IIteratorType<Exchange::IHDRProperties::HDRType, Exchange::ID_HDR_ITERATOR>" } } }, 
    [5] = { name = "HDRSetting", retvals = {  { type = Type.HRESULT },  { name = "type", type = Type.ENUMU8, enum = "Exchange::IHDRProperties::HDRType" } } } 
}

INTERFACES[771] = "Exchange::IDisplayProperties"
METHODS[771] = {
    [3] = { name = "ColorSpace", retvals = {  { type = Type.HRESULT },  { name = "cs", type = Type.ENUMU8, enum = "Exchange::IDisplayProperties::ColourSpaceType" } } }, 
    [4] = { name = "FrameRate", retvals = {  { type = Type.HRESULT },  { name = "rate", type = Type.ENUMU8, enum = "Exchange::IDisplayProperties::FrameRateType" } } }, 
    [5] = { name = "ColourDepth", retvals = {  { type = Type.HRESULT },  { name = "colour", type = Type.ENUMU8, enum = "Exchange::IDisplayProperties::ColourDepthType" } } }, 
    [6] = { name = "Colorimetry", retvals = {  { type = Type.HRESULT },  { name = "colorimetry", type = Type.OBJECT, class = "RPC::IIteratorType<Exchange::IDisplayProperties::ColorimetryType, Exchange::ID_COLORIMETRY_ITERATOR>" } } }, 
    [7] = { name = "QuantizationRange", retvals = {  { type = Type.HRESULT },  { name = "qr", type = Type.ENUMU8, enum = "Exchange::IDisplayProperties::QuantizationRangeType" } } }, 
    [8] = { name = "EOTF", retvals = {  { type = Type.HRESULT },  { name = "eotf", type = Type.ENUMU8, enum = "Exchange::IDisplayProperties::EotfType" } } } 
}

--  IDolby.h
INTERFACES[864] = "Exchange::Dolby::IOutput"
METHODS[864] = {
    [3] = { name = "Register", retvals = {  { type = Type.HRESULT } }, params = {  { type = Type.OBJECT, class = "Exchange::Dolby::IOutput::INotification" } } }, 
    [4] = { name = "Unregister", retvals = {  { type = Type.HRESULT } }, params = {  { type = Type.OBJECT, class = "Exchange::Dolby::IOutput::INotification" } } }, 
    [5] = { name = "AtmosMetadata", retvals = {  { type = Type.HRESULT },  { name = "supported", type = Type.BOOL } } }, 
    [6] = { name = "SoundMode", retvals = {  { type = Type.HRESULT },  { name = "mode", type = Type.ENUMU8, enum = "Exchange::Dolby::IOutput::SoundModes" } } }, 
    [7] = { name = "EnableAtmosOutput", retvals = {  { type = Type.HRESULT } }, params = {  { name = "enable", type = Type.BOOL } } }, 
    [8] = { name = "Mode", retvals = {  { type = Type.HRESULT } }, params = {  { name = "mode", type = Type.ENUMU8, enum = "Exchange::Dolby::IOutput::Type" } } }, 
    [9] = { name = "Mode", retvals = {  { type = Type.HRESULT },  { name = "mode", type = Type.ENUMU8, enum = "Exchange::Dolby::IOutput::Type" } } } 
}

INTERFACES[865] = "Exchange::Dolby::IOutput::INotification"
METHODS[865] = {
    [3] = { name = "AudioModeChanged", params = {  { name = "mode", type = Type.ENUMU8, enum = "Exchange::Dolby::IOutput::SoundModes" },  { name = "enabled", type = Type.BOOL } } } 
}

--  IDsgccClient.h
INTERFACES[608] = "Exchange::IDsgccClient"
METHODS[608] = {
    [3] = { name = "Configure", retvals = {  { type = Type.UINT32 } }, params = {  { name = "service", type = Type.OBJECT, class = "PluginHost::IShell" } } }, 
    [4] = { name = "GetChannels", retvals = {  { type = Type.STRING } } }, 
    [5] = { name = "State", retvals = {  { type = Type.STRING } } }, 
    [6] = { name = "Restart" }, 
    [7] = { name = "Callback", params = {  { name = "callback", type = Type.OBJECT, class = "Exchange::IDsgccClient::INotification" } } }, 
    [8] = { name = "DsgccClientSet", params = {  { name = "str", type = Type.STRING } } } 
}

INTERFACES[609] = "Exchange::IDsgccClient::INotification"
METHODS[609] = {
    [3] = { name = "StateChange", params = {  { name = "newState", type = Type.ENUMU8, enum = "Exchange::IDsgccClient::state" } } } 
}

--  IExternal.h
INTERFACES[144] = "Exchange::IExternal"
METHODS[144] = {
    [3] = { name = "Register", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IExternal::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IExternal::INotification" } } }, 
    [5] = { name = "Condition", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IExternal::condition" } } }, 
    [6] = { name = "Identifier", retvals = {  { type = Type.UINT32 } } }, 
    [7] = { name = "Type", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Minimum", retvals = {  { type = Type.INT32 } } }, 
    [9] = { name = "Maximum", retvals = {  { type = Type.INT32 } } }, 
    [10] = { name = "Get", retvals = {  { type = Type.UINT32 },  { name = "value", type = Type.INT32 } } }, 
    [11] = { name = "Set", retvals = {  { type = Type.UINT32 } }, params = {  { name = "value", type = Type.INT32 } } }, 
    [12] = { name = "Evaluate" }, 
    [13] = { name = "Metadata", retvals = {  { type = Type.STRING } } } 
}

INTERFACES[145] = "Exchange::IExternal::INotification"
METHODS[145] = {
    [3] = { name = "Update", params = {  { name = "id", type = Type.UINT32 } } } 
}

INTERFACES[146] = "Exchange::IExternal::ICatalog"
METHODS[146] = {
    [3] = { name = "Register", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IExternal::ICatalog::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IExternal::ICatalog::INotification" } } }, 
    [5] = { name = "Resource", retvals = {  { type = Type.OBJECT, class = "Exchange::IExternal" } }, params = {  { name = "id", type = Type.UINT32 } } } 
}

INTERFACES[147] = "Exchange::IExternal::ICatalog::INotification"
METHODS[147] = {
    [3] = { name = "Activated", params = {  { name = "source", type = Type.OBJECT, class = "Exchange::IExternal" } } }, 
    [4] = { name = "Deactivated", params = {  { name = "source", type = Type.OBJECT, class = "Exchange::IExternal" } } } 
}

--  IFocus.h
INTERFACES[1008] = "Exchange::IFocus"
METHODS[1008] = {
    [3] = { name = "Focused", retvals = {  { type = Type.UINT32 } }, params = {  { name = "focused", type = Type.BOOL } } } 
}

--  IGuide.h
INTERFACES[304] = "Exchange::IGuide"
METHODS[304] = {
    [3] = { name = "StartParser", retvals = {  { type = Type.UINT32 } }, params = {  { type = Type.OBJECT, class = "PluginHost::IShell" } } }, 
    [4] = { name = "GetChannels", retvals = {  { type = Type.STRING } } }, 
    [5] = { name = "GetPrograms", retvals = {  { type = Type.STRING } } }, 
    [6] = { name = "GetCurrentProgram", retvals = {  { type = Type.STRING } }, params = {  { type = Type.STRING } } }, 
    [7] = { name = "GetAudioLanguages", retvals = {  { type = Type.STRING } }, params = {  { type = Type.UINT32 } } }, 
    [8] = { name = "GetSubtitleLanguages", retvals = {  { type = Type.STRING } }, params = {  { type = Type.UINT32 } } }, 
    [9] = { name = "SetParentalControlPin", retvals = {  { type = Type.BOOL } }, params = {  { type = Type.STRING },  { type = Type.STRING } } }, 
    [10] = { name = "SetParentalControl", retvals = {  { type = Type.BOOL } }, params = {  { type = Type.STRING },  { type = Type.BOOL } } }, 
    [11] = { name = "IsParentalControlled", retvals = {  { type = Type.BOOL } } }, 
    [12] = { name = "SetParentalLock", retvals = {  { type = Type.BOOL } }, params = {  { type = Type.STRING },  { type = Type.BOOL },  { type = Type.STRING } } }, 
    [13] = { name = "IsParentalLocked", retvals = {  { type = Type.BOOL } }, params = {  { type = Type.STRING } } }, 
    [14] = { name = "Register", params = {  { type = Type.OBJECT, class = "Exchange::IGuide::INotification" } } }, 
    [15] = { name = "Unregister", params = {  { type = Type.OBJECT, class = "Exchange::IGuide::INotification" } } } 
}

INTERFACES[305] = "Exchange::IGuide::INotification"
METHODS[305] = {
    [3] = { name = "EITBroadcast" }, 
    [4] = { name = "EmergencyAlert" }, 
    [5] = { name = "ParentalControlChanged" }, 
    [6] = { name = "ParentalLockChanged", params = {  { type = Type.STRING } } }, 
    [7] = { name = "TestNotification", params = {  { type = Type.STRING } } } 
}

--  IInputPin.h
INTERFACES[704] = "Exchange::IInputPin"
METHODS[704] = {
    [3] = { name = "Register", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IInputPin::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IInputPin::INotification" } } }, 
    [5] = { name = "AddMarker", params = {  { name = "marker", type = Type.UINT32 } } }, 
    [6] = { name = "RemoveMarker", params = {  { name = "marker", type = Type.UINT32 } } } 
}

INTERFACES[705] = "Exchange::IInputPin::INotification"
METHODS[705] = {
    [3] = { name = "Marker", params = {  { name = "marker", type = Type.UINT32 } } } 
}

INTERFACES[706] = "Exchange::IInputPin::ICatalog"
METHODS[706] = {
    [3] = { name = "IInputPinResource", retvals = {  { type = Type.OBJECT, class = "Exchange::IInputPin" } }, params = {  { name = "id", type = Type.UINT32 } } } 
}

--  IInputSwitch.h
INTERFACES[848] = "Exchange::IInputSwitch"
METHODS[848] = {
    [3] = { name = "Consumers", retvals = {  { type = Type.OBJECT, class = "RPC::IStringIterator" } } }, 
    [4] = { name = "Consumer", retvals = {  { type = Type.BOOL } }, params = {  { name = "name", type = Type.STRING } } }, 
    [5] = { name = "Consumer", retvals = {  { type = Type.UINT32 } }, params = {  { name = "name", type = Type.STRING },  { name = "value", type = Type.ENUMU8, enum = "Exchange::IInputSwitch::mode" } } }, 
    [6] = { name = "Select", retvals = {  { type = Type.UINT32 } }, params = {  { name = "name", type = Type.STRING } } } 
}

--  IIPNetwork.h
--  IKeyHandler.h
INTERFACES[160] = "Exchange::IKeyHandler"
METHODS[160] = {
    [3] = { name = "KeyEvent", retvals = {  { type = Type.UINT32 } }, params = {  { name = "pressed", type = Type.BOOL },  { name = "code", type = Type.UINT32 },  { name = "table", type = Type.STRING } } }, 
    [4] = { name = "ProducerEvent", params = {  { name = "producerName", type = Type.STRING },  { name = "event", type = Type.ENUMU8, enum = "Exchange::ProducerEvents" } } }, 
    [5] = { name = "Producer", retvals = {  { type = Type.OBJECT, class = "Exchange::IKeyProducer" } }, params = {  { name = "name", type = Type.STRING } } } 
}

INTERFACES[656] = "Exchange::IWheelHandler"
METHODS[656] = {
    [3] = { name = "AxisEvent", retvals = {  { type = Type.UINT32 } }, params = {  { name = "x", type = Type.INT16 },  { name = "y", type = Type.INT16 } } }, 
    [4] = { name = "WheelProducer", retvals = {  { type = Type.OBJECT, class = "Exchange::IWheelProducer" } }, params = {  { name = "name", type = Type.STRING } } } 
}

INTERFACES[658] = "Exchange::IPointerHandler"
METHODS[658] = {
    [3] = { name = "PointerMotionEvent", retvals = {  { type = Type.UINT32 } }, params = {  { name = "x", type = Type.INT16 },  { name = "y", type = Type.INT16 } } }, 
    [4] = { name = "PointerButtonEvent", retvals = {  { type = Type.UINT32 } }, params = {  { name = "pressed", type = Type.BOOL },  { name = "button", type = Type.UINT8 } } }, 
    [5] = { name = "PointerProducer", retvals = {  { type = Type.OBJECT, class = "Exchange::IPointerProducer" } }, params = {  { name = "name", type = Type.STRING } } } 
}

INTERFACES[660] = "Exchange::ITouchHandler"
METHODS[660] = {
    [3] = { name = "TouchEvent", retvals = {  { type = Type.UINT32 } }, params = {  { name = "index", type = Type.UINT8 },  { name = "state", type = Type.ENUMU8, enum = "Exchange::ITouchHandler::touchstate" },  { name = "x", type = Type.UINT16 },  { name = "y", type = Type.UINT16 } } }, 
    [4] = { name = "TouchProducer", retvals = {  { type = Type.OBJECT, class = "Exchange::ITouchProducer" } }, params = {  { name = "name", type = Type.STRING } } } 
}

INTERFACES[176] = "Exchange::IKeyProducer"
METHODS[176] = {
    [3] = { name = "Name", retvals = {  { type = Type.STRING } } }, 
    [4] = { name = "Callback", retvals = {  { type = Type.UINT32 } }, params = {  { name = "callback", type = Type.OBJECT, class = "Exchange::IKeyHandler" } } }, 
    [5] = { name = "Error", retvals = {  { type = Type.UINT32 } } }, 
    [6] = { name = "MetaData", retvals = {  { type = Type.STRING } } }, 
    [7] = { name = "Configure", params = {  { name = "settings", type = Type.STRING } } }, 
    [8] = { name = "Pair", retvals = {  { type = Type.BOOL } } }, 
    [9] = { name = "Unpair", retvals = {  { type = Type.BOOL } }, params = {  { name = "bindingId", type = Type.STRING } } } 
}

INTERFACES[657] = "Exchange::IWheelProducer"
METHODS[657] = {
    [3] = { name = "Name", retvals = {  { type = Type.STRING } } }, 
    [4] = { name = "Callback", retvals = {  { type = Type.UINT32 } }, params = {  { name = "callback", type = Type.OBJECT, class = "Exchange::IWheelHandler" } } }, 
    [5] = { name = "Error", retvals = {  { type = Type.UINT32 } } }, 
    [6] = { name = "MetaData", retvals = {  { type = Type.STRING } } }, 
    [7] = { name = "Configure", params = {  { name = "settings", type = Type.STRING } } } 
}

INTERFACES[659] = "Exchange::IPointerProducer"
METHODS[659] = {
    [3] = { name = "Name", retvals = {  { type = Type.STRING } } }, 
    [4] = { name = "Callback", retvals = {  { type = Type.UINT32 } }, params = {  { name = "callback", type = Type.OBJECT, class = "Exchange::IPointerHandler" } } }, 
    [5] = { name = "Error", retvals = {  { type = Type.UINT32 } } }, 
    [6] = { name = "MetaData", retvals = {  { type = Type.STRING } } }, 
    [7] = { name = "Configure", params = {  { name = "settings", type = Type.STRING } } } 
}

INTERFACES[661] = "Exchange::ITouchProducer"
METHODS[661] = {
    [3] = { name = "Name", retvals = {  { type = Type.STRING } } }, 
    [4] = { name = "Callback", retvals = {  { type = Type.UINT32 } }, params = {  { name = "callback", type = Type.OBJECT, class = "Exchange::ITouchHandler" } } }, 
    [5] = { name = "Error", retvals = {  { type = Type.UINT32 } } }, 
    [6] = { name = "MetaData", retvals = {  { type = Type.STRING } } }, 
    [7] = { name = "Configure", params = {  { name = "settings", type = Type.STRING } } } 
}

--  ILanguageTag.h
INTERFACES[976] = "Exchange::ILanguageTag"
METHODS[976] = {
    [3] = { name = "Register", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::ILanguageTag::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::ILanguageTag::INotification" } } }, 
    [5] = { name = "Language", retvals = {  { type = Type.HRESULT },  { name = "language", type = Type.STRING } } }, 
    [6] = { name = "Language", retvals = {  { type = Type.HRESULT } }, params = {  { name = "language", type = Type.STRING } } } 
}

INTERFACES[977] = "Exchange::ILanguageTag::INotification"
METHODS[977] = {
    [3] = { name = "LanguageChanged", params = {  { name = "language", type = Type.STRING } } } 
}

--  ILISA.h
INTERFACES[1168] = "Exchange::ILISA"
METHODS[1168] = {
    [3] = { name = "Install", retvals = {  { type = Type.UINT32 },  { name = "handle", type = Type.STRING } }, params = {  { name = "type", type = Type.STRING },  { name = "id", type = Type.STRING },  { name = "version", type = Type.STRING },  { name = "url", type = Type.STRING },  { name = "appName", type = Type.STRING },  { name = "category", type = Type.STRING } } }, 
    [4] = { name = "Uninstall", retvals = {  { type = Type.UINT32 },  { name = "handle", type = Type.STRING } }, params = {  { name = "type", type = Type.STRING },  { name = "id", type = Type.STRING },  { name = "version", type = Type.STRING },  { name = "uninstallType", type = Type.STRING } } }, 
    [5] = { name = "Download", retvals = {  { type = Type.UINT32 },  { name = "handle", type = Type.STRING } }, params = {  { name = "type", type = Type.STRING },  { name = "id", type = Type.STRING },  { name = "version", type = Type.STRING },  { name = "resKey", type = Type.STRING },  { name = "url", type = Type.STRING } } }, 
    [6] = { name = "Reset", retvals = {  { type = Type.UINT32 } }, params = {  { name = "type", type = Type.STRING },  { name = "id", type = Type.STRING },  { name = "version", type = Type.STRING },  { name = "resetType", type = Type.STRING } } }, 
    [7] = { name = "GetStorageDetails", retvals = {  { type = Type.UINT32 },  { name = "result", type = Type.OBJECT, class = "Exchange::ILISA::IStoragePayload" } }, params = {  { name = "type", type = Type.STRING },  { name = "id", type = Type.STRING },  { name = "version", type = Type.STRING } } }, 
    [8] = { name = "SetAuxMetadata", retvals = {  { type = Type.UINT32 } }, params = {  { name = "type", type = Type.STRING },  { name = "id", type = Type.STRING },  { name = "version", type = Type.STRING },  { name = "key", type = Type.STRING },  { name = "value", type = Type.STRING } } }, 
    [9] = { name = "ClearAuxMetadata", retvals = {  { type = Type.UINT32 } }, params = {  { name = "type", type = Type.STRING },  { name = "id", type = Type.STRING },  { name = "version", type = Type.STRING },  { name = "key", type = Type.STRING } } }, 
    [10] = { name = "GetMetadata", retvals = {  { type = Type.UINT32 },  { name = "result", type = Type.OBJECT, class = "Exchange::ILISA::IMetadataPayload" } }, params = {  { name = "type", type = Type.STRING },  { name = "id", type = Type.STRING },  { name = "version", type = Type.STRING } } }, 
    [11] = { name = "Cancel", retvals = {  { type = Type.UINT32 } }, params = {  { name = "handle", type = Type.STRING } } }, 
    [12] = { name = "GetProgress", retvals = {  { type = Type.UINT32 },  { name = "progress", type = Type.UINT32 } }, params = {  { name = "handle", type = Type.STRING } } }, 
    [13] = { name = "Register", retvals = {  { type = Type.UINT32 } }, params = {  { name = "notification", type = Type.OBJECT, class = "Exchange::ILISA::INotification" } } }, 
    [14] = { name = "Unregister", retvals = {  { type = Type.UINT32 } }, params = {  { name = "notification", type = Type.OBJECT, class = "Exchange::ILISA::INotification" } } }, 
    [15] = { name = "Configure", retvals = {  { type = Type.UINT32 } }, params = {  { name = "config", type = Type.STRING } } }, 
    [16] = { name = "GetList", retvals = {  { type = Type.UINT32 },  { name = "result", type = Type.OBJECT, class = "Exchange::ILISA::IAppsPayload" } }, params = {  { name = "type", type = Type.STRING },  { name = "id", type = Type.STRING },  { name = "version", type = Type.STRING },  { name = "appName", type = Type.STRING },  { name = "category", type = Type.STRING } } }, 
    [17] = { name = "Lock", retvals = {  { type = Type.UINT32 },  { name = "result", type = Type.OBJECT, class = "Exchange::ILISA::IHandleResult" } }, params = {  { name = "type", type = Type.STRING },  { name = "id", type = Type.STRING },  { name = "version", type = Type.STRING },  { name = "reason", type = Type.STRING },  { name = "owner", type = Type.STRING } } }, 
    [18] = { name = "Unlock", retvals = {  { type = Type.UINT32 } }, params = {  { name = "handle", type = Type.STRING } } }, 
    [19] = { name = "GetLockInfo", retvals = {  { type = Type.UINT32 },  { name = "result", type = Type.OBJECT, class = "Exchange::ILISA::ILockInfo" } }, params = {  { name = "type", type = Type.STRING },  { name = "id", type = Type.STRING },  { name = "version", type = Type.STRING } } } 
}

INTERFACES[1175] = "Exchange::ILISA::IStorage"
METHODS[1175] = {
    [3] = { name = "Path", retvals = {  { type = Type.UINT32 },  { name = "path", type = Type.STRING } } }, 
    [4] = { name = "QuotaKB", retvals = {  { type = Type.UINT32 },  { name = "quotaKB", type = Type.STRING } } }, 
    [5] = { name = "UsedKB", retvals = {  { type = Type.UINT32 },  { name = "usedKB", type = Type.STRING } } } 
}

INTERFACES[1176] = "Exchange::ILISA::IStoragePayload"
METHODS[1176] = {
    [3] = { name = "Apps", retvals = {  { type = Type.UINT32 },  { name = "storage", type = Type.OBJECT, class = "Exchange::ILISA::IStorage" } } }, 
    [4] = { name = "Persistent", retvals = {  { type = Type.UINT32 },  { name = "storage", type = Type.OBJECT, class = "Exchange::ILISA::IStorage" } } } 
}

INTERFACES[1178] = "Exchange::ILISA::IKeyValue"
METHODS[1178] = {
    [3] = { name = "Key", retvals = {  { type = Type.UINT32 },  { name = "key", type = Type.STRING } } }, 
    [4] = { name = "Value", retvals = {  { type = Type.UINT32 },  { name = "value", type = Type.STRING } } } 
}

INTERFACES[1179] = "Exchange::ILISA::IKeyValueIterator"
METHODS[1179] = {
    [3] = { name = "Reset", retvals = {  { type = Type.UINT32 } } }, 
    [4] = { name = "IsValid", retvals = {  { type = Type.UINT32 },  { name = "isValid", type = Type.BOOL } } }, 
    [5] = { name = "Next", retvals = {  { type = Type.UINT32 },  { name = "hasNext", type = Type.BOOL } } }, 
    [6] = { name = "Current", retvals = {  { type = Type.UINT32 },  { name = "keyValue", type = Type.OBJECT, class = "Exchange::ILISA::IKeyValue" } } } 
}

INTERFACES[1180] = "Exchange::ILISA::IMetadataPayload"
METHODS[1180] = {
    [3] = { name = "AppName", retvals = {  { type = Type.UINT32 },  { name = "appName", type = Type.STRING } } }, 
    [4] = { name = "Category", retvals = {  { type = Type.UINT32 },  { name = "category", type = Type.STRING } } }, 
    [5] = { name = "Url", retvals = {  { type = Type.UINT32 },  { name = "url", type = Type.STRING } } }, 
    [6] = { name = "Resources", retvals = {  { type = Type.UINT32 },  { name = "resources", type = Type.OBJECT, class = "Exchange::ILISA::IKeyValueIterator" } } }, 
    [7] = { name = "AuxMetadata", retvals = {  { type = Type.UINT32 },  { name = "auxMetadata", type = Type.OBJECT, class = "Exchange::ILISA::IKeyValueIterator" } } } 
}

INTERFACES[1169] = "Exchange::ILISA::INotification"
METHODS[1169] = {
    [3] = { name = "operationStatus", params = {  { name = "handle", type = Type.STRING },  { name = "operation", type = Type.STRING },  { name = "type", type = Type.STRING },  { name = "id", type = Type.STRING },  { name = "version", type = Type.STRING },  { name = "status", type = Type.STRING },  { name = "details", type = Type.STRING } } } 
}

INTERFACES[1170] = "Exchange::ILISA::IAppVersion"
METHODS[1170] = {
    [3] = { name = "Version", retvals = {  { type = Type.UINT32 },  { name = "version", type = Type.STRING } } }, 
    [4] = { name = "AppName", retvals = {  { type = Type.UINT32 },  { name = "appName", type = Type.STRING } } }, 
    [5] = { name = "Category", retvals = {  { type = Type.UINT32 },  { name = "category", type = Type.STRING } } }, 
    [6] = { name = "Url", retvals = {  { type = Type.UINT32 },  { name = "url", type = Type.STRING } } } 
}

INTERFACES[1171] = "Exchange::ILISA::IAppVersion::IIterator"
METHODS[1171] = {
    [3] = { name = "Reset", retvals = {  { type = Type.UINT32 } } }, 
    [4] = { name = "IsValid", retvals = {  { type = Type.UINT32 },  { name = "isValid", type = Type.BOOL } } }, 
    [5] = { name = "Next", retvals = {  { type = Type.UINT32 },  { name = "hasNext", type = Type.BOOL } } }, 
    [6] = { name = "Current", retvals = {  { type = Type.UINT32 },  { name = "app", type = Type.OBJECT, class = "Exchange::ILISA::IAppVersion" } } } 
}

INTERFACES[1172] = "Exchange::ILISA::IApp"
METHODS[1172] = {
    [3] = { name = "Type", retvals = {  { type = Type.UINT32 },  { name = "type", type = Type.STRING } } }, 
    [4] = { name = "Id", retvals = {  { type = Type.UINT32 },  { name = "id", type = Type.STRING } } }, 
    [5] = { name = "Installed", retvals = {  { type = Type.UINT32 },  { name = "versions", type = Type.OBJECT, class = "Exchange::ILISA::IAppVersion::IIterator" } } } 
}

INTERFACES[1173] = "Exchange::ILISA::IApp::IIterator"
METHODS[1173] = {
    [3] = { name = "Reset", retvals = {  { type = Type.UINT32 } } }, 
    [4] = { name = "IsValid", retvals = {  { type = Type.UINT32 },  { name = "isValid", type = Type.BOOL } } }, 
    [5] = { name = "Next", retvals = {  { type = Type.UINT32 },  { name = "hasNext", type = Type.BOOL } } }, 
    [6] = { name = "Current", retvals = {  { type = Type.UINT32 },  { name = "app", type = Type.OBJECT, class = "Exchange::ILISA::IApp" } } } 
}

INTERFACES[1174] = "Exchange::ILISA::IAppsPayload"
METHODS[1174] = {
    [3] = { name = "Apps", retvals = {  { type = Type.UINT32 },  { name = "apps", type = Type.OBJECT, class = "Exchange::ILISA::IApp::IIterator" } } } 
}

INTERFACES[1182] = "Exchange::ILISA::IHandleResult"
METHODS[1182] = {
    [3] = { name = "Handle", retvals = {  { type = Type.UINT32 },  { name = "handle", type = Type.STRING } } } 
}

INTERFACES[1181] = "Exchange::ILISA::ILockInfo"
METHODS[1181] = {
    [3] = { name = "Reason", retvals = {  { type = Type.UINT32 },  { name = "reason", type = Type.STRING } } }, 
    [4] = { name = "Owner", retvals = {  { type = Type.UINT32 },  { name = "owner", type = Type.STRING } } } 
}

--  IMath.h
INTERFACES[720] = "Exchange::IMath"
METHODS[720] = {
    [3] = { name = "Add", retvals = {  { type = Type.HRESULT },  { name = "sum", type = Type.UINT16 } }, params = {  { name = "A", type = Type.UINT16 },  { name = "B", type = Type.UINT16 } } }, 
    [4] = { name = "Sub", retvals = {  { type = Type.HRESULT },  { name = "sum", type = Type.UINT16 } }, params = {  { name = "A", type = Type.UINT16 },  { name = "B", type = Type.UINT16 } } } 
}

--  IMediaPlayer.h
INTERFACES[912] = "Exchange::IMediaPlayer"
METHODS[912] = {
    [3] = { name = "CreateStream", retvals = {  { type = Type.OBJECT, class = "Exchange::IMediaPlayer::IMediaStream" } }, params = {  { name = "id", type = Type.STRING } } } 
}

INTERFACES[913] = "Exchange::IMediaPlayer::IMediaStream"
METHODS[913] = {
    [3] = { name = "Load", retvals = {  { type = Type.UINT32 } }, params = {  { name = "url", type = Type.STRING },  { name = "autoPlay", type = Type.BOOL } } }, 
    [4] = { name = "SetRate", retvals = {  { type = Type.UINT32 } }, params = {  { name = "rate", type = Type.INT32 } } }, 
    [5] = { name = "SeekTo", retvals = {  { type = Type.UINT32 } }, params = {  { name = "positionSec", type = Type.INT32 } } }, 
    [6] = { name = "Stop", retvals = {  { type = Type.UINT32 } } }, 
    [7] = { name = "InitConfig", retvals = {  { type = Type.UINT32 } }, params = {  { name = "configurationJson", type = Type.STRING } } }, 
    [8] = { name = "InitDRMConfig", retvals = {  { type = Type.UINT32 } }, params = {  { name = "configurationJson", type = Type.STRING } } }, 
    [9] = { name = "Register", retvals = {  { type = Type.UINT32 } }, params = {  { name = "notification", type = Type.OBJECT, class = "Exchange::IMediaPlayer::IMediaStream::INotification" } } }, 
    [10] = { name = "Unregister", retvals = {  { type = Type.UINT32 } }, params = {  { name = "notification", type = Type.OBJECT, class = "Exchange::IMediaPlayer::IMediaStream::INotification" } } } 
}

INTERFACES[914] = "Exchange::IMediaPlayer::IMediaStream::INotification"
METHODS[914] = {
    [3] = { name = "Event", params = {  { name = "eventName", type = Type.STRING },  { name = "parametersJson", type = Type.STRING } } } 
}

--  IMemory.h
--  IMessageControl.h
INTERFACES[1139] = "RPC::IIteratorType<Exchange::IMessageControl::Control, Exchange::ID_MESSAGE_CONTROL_ITERATOR>"
METHODS[1139] = {
    [3] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.POD, class = "Exchange::IMessageControl::Control", pod = { { name = type, type = Type.ENUMU8, enum = "Exchange::IMessageControl::messagetype" }, { name = category, type = Type.STRING }, { name = module, type = Type.STRING }, { name = enabled, type = Type.BOOL } } } } }, 
    [4] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.POD, class = "Exchange::IMessageControl::Control", pod = { { name = type, type = Type.ENUMU8, enum = "Exchange::IMessageControl::messagetype" }, { name = category, type = Type.STRING }, { name = module, type = Type.STRING }, { name = enabled, type = Type.BOOL } } } } }, 
    [5] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [7] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Current", retvals = {  { type = Type.POD, class = "Exchange::IMessageControl::Control", pod = { { name = type, type = Type.ENUMU8, enum = "Exchange::IMessageControl::messagetype" }, { name = category, type = Type.STRING }, { name = module, type = Type.STRING }, { name = enabled, type = Type.BOOL } } } } } 
}

INTERFACES[1136] = "Exchange::IMessageControl"
METHODS[1136] = {
    [3] = { name = "Enable", retvals = {  { type = Type.HRESULT } }, params = {  { name = "type", type = Type.ENUMU8, enum = "Exchange::IMessageControl::messagetype" },  { name = "category", type = Type.STRING },  { name = "module", type = Type.STRING },  { name = "enabled", type = Type.BOOL } } }, 
    [4] = { name = "Controls", retvals = {  { type = Type.HRESULT },  { name = "control", type = Type.OBJECT, class = "RPC::IIteratorType<Exchange::IMessageControl::Control, Exchange::ID_MESSAGE_CONTROL_ITERATOR>" } } } 
}

INTERFACES[1137] = "Exchange::IMessageControl::ICollect"
METHODS[1137] = {
    [3] = { name = "Callback", retvals = {  { type = Type.UINT32 } }, params = {  { name = "callback", type = Type.OBJECT, class = "Exchange::IMessageControl::ICollect::ICallback" } } }, 
    [4] = { name = "Attach", retvals = {  { type = Type.UINT32 } }, params = {  { name = "id", type = Type.UINT32 } } }, 
    [5] = { name = "Detach", retvals = {  { type = Type.UINT32 } }, params = {  { name = "id", type = Type.UINT32 } } } 
}

INTERFACES[1138] = "Exchange::IMessageControl::ICollect::ICallback"
METHODS[1138] = {
    [3] = { name = "Message", params = {  { name = "type", type = Type.ENUMU8, enum = "Exchange::IMessageControl::messagetype" },  { name = "module", type = Type.STRING },  { name = "category", type = Type.STRING },  { name = "fileName", type = Type.STRING },  { name = "lineNumber", type = Type.UINT16 },  { name = "className", type = Type.STRING },  { name = "timeStamp", type = Type.UINT64 },  { name = "text", type = Type.STRING } } } 
}

--  IMessenger.h
INTERFACES[576] = "Exchange::IRoomAdministrator"
METHODS[576] = {
    [3] = { name = "Register", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IRoomAdministrator::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IRoomAdministrator::INotification" } } }, 
    [5] = { name = "Join", retvals = {  { type = Type.OBJECT, class = "Exchange::IRoomAdministrator::IRoom" } }, params = {  { name = "roomId", type = Type.STRING },  { name = "userId", type = Type.STRING },  { name = "messageSink", type = Type.OBJECT, class = "Exchange::IRoomAdministrator::IRoom::IMsgNotification" } } } 
}

INTERFACES[577] = "Exchange::IRoomAdministrator::INotification"
METHODS[577] = {
    [3] = { name = "Created", params = {  { name = "id", type = Type.STRING } } }, 
    [4] = { name = "Destroyed", params = {  { name = "id", type = Type.STRING } } } 
}

INTERFACES[578] = "Exchange::IRoomAdministrator::IRoom"
METHODS[578] = {
    [3] = { name = "SendMessage", params = {  { name = "message", type = Type.STRING } } }, 
    [4] = { name = "SetCallback", params = {  { name = "callback", type = Type.OBJECT, class = "Exchange::IRoomAdministrator::IRoom::ICallback" } } } 
}

INTERFACES[579] = "Exchange::IRoomAdministrator::IRoom::ICallback"
METHODS[579] = {
    [3] = { name = "Joined", params = {  { name = "userId", type = Type.STRING } } }, 
    [4] = { name = "Left", params = {  { name = "userId", type = Type.STRING } } } 
}

INTERFACES[580] = "Exchange::IRoomAdministrator::IRoom::IMsgNotification"
METHODS[580] = {
    [3] = { name = "Message", params = {  { name = "message", type = Type.STRING },  { name = "userId", type = Type.STRING } } } 
}

--  INetflix.h
INTERFACES[208] = "Exchange::INetflix"
METHODS[208] = {
    [3] = { name = "Register", params = {  { name = "netflix", type = Type.OBJECT, class = "Exchange::INetflix::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "netflix", type = Type.OBJECT, class = "Exchange::INetflix::INotification" } } }, 
    [5] = { name = "SystemCommand", params = {  { name = "command", type = Type.STRING } } } 
}

INTERFACES[209] = "Exchange::INetflix::INotification"
METHODS[209] = {
    [3] = { name = "StateChange", params = {  { name = "state", type = Type.ENUMU16, enum = "Exchange::INetflix::state" } } }, 
    [4] = { name = "Exit", params = {  { name = "exitCode", type = Type.UINT32 } } } 
}

--  INetworkControl.h
INTERFACES[1234] = "RPC::IIteratorType<Exchange::INetworkControl::NetworkInfo, Exchange::ID_NETWORKCONTROL_NETWORK_INFO_ITERATOR>"
METHODS[1234] = {
    [3] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.POD, class = "Exchange::INetworkControl::NetworkInfo", pod = { { name = address, type = Type.STRING }, { name = defaultGateway, type = Type.STRING }, { name = mask, type = Type.UINT8 }, { name = mode, type = Type.ENUMU8, enum = "Exchange::INetworkControl::ModeType" } } } } }, 
    [4] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.POD, class = "Exchange::INetworkControl::NetworkInfo", pod = { { name = address, type = Type.STRING }, { name = defaultGateway, type = Type.STRING }, { name = mask, type = Type.UINT8 }, { name = mode, type = Type.ENUMU8, enum = "Exchange::INetworkControl::ModeType" } } } } }, 
    [5] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [7] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Current", retvals = {  { type = Type.POD, class = "Exchange::INetworkControl::NetworkInfo", pod = { { name = address, type = Type.STRING }, { name = defaultGateway, type = Type.STRING }, { name = mask, type = Type.UINT8 }, { name = mode, type = Type.ENUMU8, enum = "Exchange::INetworkControl::ModeType" } } } } } 
}

INTERFACES[1232] = "Exchange::INetworkControl"
METHODS[1232] = {
    [3] = { name = "Register", retvals = {  { type = Type.HRESULT } }, params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::INetworkControl::INotification" } } }, 
    [4] = { name = "Unregister", retvals = {  { type = Type.HRESULT } }, params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::INetworkControl::INotification" } } }, 
    [5] = { name = "Interfaces", retvals = {  { type = Type.HRESULT },  { name = "interfaces", type = Type.OBJECT, class = "RPC::IIteratorType<string, RPC::ID_STRINGITERATOR>" } } }, 
    [6] = { name = "Status", retvals = {  { type = Type.HRESULT },  { name = "status", type = Type.ENUMU8, enum = "Exchange::INetworkControl::StatusType" } }, params = {  { name = "interface", type = Type.STRING } } }, 
    [7] = { name = "Network", retvals = {  { type = Type.HRESULT },  { name = "networkInfo", type = Type.OBJECT, class = "RPC::IIteratorType<Exchange::INetworkControl::NetworkInfo, Exchange::ID_NETWORKCONTROL_NETWORK_INFO_ITERATOR>" } }, params = {  { name = "interface", type = Type.STRING } } }, 
    [8] = { name = "Network", retvals = {  { type = Type.HRESULT } }, params = {  { name = "interface", type = Type.STRING },  { name = "networkInfo", type = Type.OBJECT, class = "RPC::IIteratorType<Exchange::INetworkControl::NetworkInfo, Exchange::ID_NETWORKCONTROL_NETWORK_INFO_ITERATOR>" } } }, 
    [9] = { name = "DNS", retvals = {  { type = Type.HRESULT },  { name = "dns", type = Type.OBJECT, class = "RPC::IIteratorType<string, RPC::ID_STRINGITERATOR>" } } }, 
    [10] = { name = "DNS", retvals = {  { type = Type.HRESULT } }, params = {  { name = "dns", type = Type.OBJECT, class = "RPC::IIteratorType<string, RPC::ID_STRINGITERATOR>" } } }, 
    [11] = { name = "Up", retvals = {  { type = Type.HRESULT },  { name = "up", type = Type.BOOL } }, params = {  { name = "interface", type = Type.STRING } } }, 
    [12] = { name = "Up", retvals = {  { type = Type.HRESULT } }, params = {  { name = "interface", type = Type.STRING },  { name = "up", type = Type.BOOL } } }, 
    [13] = { name = "Flush", retvals = {  { type = Type.HRESULT } }, params = {  { name = "interface", type = Type.STRING } } } 
}

INTERFACES[1233] = "Exchange::INetworkControl::INotification"
METHODS[1233] = {
    [3] = { name = "Update", params = {  { name = "interfaceName", type = Type.STRING } } } 
}

--  INetworkTools.h
INTERFACES[1056] = "Exchange::INetworkTools"
METHODS[1056] = {
    [3] = { name = "Ping", retvals = {  { type = Type.HRESULT } }, params = {  { name = "destination", type = Type.STRING },  { name = "timeOutInSeconds", type = Type.UINT16 },  { name = "count", type = Type.UINT16 } } }, 
    [4] = { name = "TraceRoute", retvals = {  { type = Type.HRESULT } }, params = {  { name = "destination", type = Type.STRING },  { name = "timeOutInSeconds", type = Type.UINT16 } } }, 
    [5] = { name = "Callback", retvals = {  { type = Type.HRESULT } }, params = {  { name = "reportOn", type = Type.OBJECT, class = "Exchange::INetworkTools::ICallback" } } } 
}

INTERFACES[1057] = "Exchange::INetworkTools::ICallback"
METHODS[1057] = {
    [3] = { name = "Report", params = {  { name = "source", type = Type.STRING },  { name = "metadata", type = Type.STRING } } } 
}

--  IOCDM.h
INTERFACES[1026] = "Exchange::ISession"
METHODS[1026] = {
    [3] = { name = "Load", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" } } }, 
    [4] = { name = "Update", params = {  { name = "keyMessage", type = Type.BUFFER16, length_param = "keyLength" } } }, 
    [5] = { name = "Remove", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" } } }, 
    [6] = { name = "Metadata", retvals = {  { type = Type.STRING } } }, 
    [7] = { name = "Status", retvals = {  { type = Type.ENUMU32, enum = "Exchange::ISession::KeyStatus" } } }, 
    [8] = { name = "Status", retvals = {  { type = Type.ENUMU32, enum = "Exchange::ISession::KeyStatus" } }, params = {  { name = "keyID", type = Type.BUFFER8, length_param = "keyIDLength" } } }, 
    [9] = { name = "CreateSessionBuffer", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" },  { name = "bufferID", type = Type.STRING } } }, 
    [10] = { name = "BufferId", retvals = {  { type = Type.STRING } } }, 
    [11] = { name = "SessionId", retvals = {  { type = Type.STRING } } }, 
    [12] = { name = "Close" }, 
    [13] = { name = "ResetOutputProtection" }, 
    [14] = { name = "Revoke", params = {  { name = "callback", type = Type.OBJECT, class = "Exchange::ISession::ICallback" } } } 
}

INTERFACES[1027] = "Exchange::ISession::ICallback"
METHODS[1027] = {
    [3] = { name = "OnKeyMessage", params = {  { name = "keyMessage", type = Type.BUFFER16, length_param = "keyLength" },  { name = "URL", type = Type.STRING } } }, 
    [4] = { name = "OnError", params = {  { name = "error", type = Type.INT16 },  { name = "sysError", type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" },  { name = "errorMessage", type = Type.STRING } } }, 
    [5] = { name = "OnKeyStatusUpdate", params = {  { name = "keyID", type = Type.BUFFER8, length_param = "keyIDLength" },  { name = "status", type = Type.ENUMU32, enum = "Exchange::ISession::KeyStatus" } } }, 
    [6] = { name = "OnKeyStatusesUpdated" } 
}

INTERFACES[1028] = "Exchange::ISessionExt"
METHODS[1028] = {
    [3] = { name = "SessionIdExt", retvals = {  { type = Type.UINT32 } } }, 
    [4] = { name = "BufferIdExt", retvals = {  { type = Type.STRING } } }, 
    [5] = { name = "SetDrmHeader", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" } }, params = {  { name = "drmHeader", type = Type.BUFFER16, length_param = "drmHeaderLength" } } }, 
    [6] = { name = "GetChallengeDataExt", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" },  { name = "challenge", type = Type.BUFFER16, length_param = "challengeSize" } }, params = {  { name = "challenge", type = Type.BUFFER16, length_param = "challengeSize" },  { name = "isLDL", type = Type.UINT32 } } }, 
    [7] = { name = "CancelChallengeDataExt", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" } } }, 
    [8] = { name = "StoreLicenseData", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" },  { name = "secureStopId", type = Type.BUFFER8 } }, params = {  { name = "licenseData", type = Type.BUFFER16, length_param = "licenseDataSize" } } }, 
    [9] = { name = "SelectKeyId", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" } }, params = {  { name = "keyId", type = Type.BUFFER8, length_param = "keyLength" } } }, 
    [10] = { name = "CleanDecryptContext", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" } } } 
}

INTERFACES[1024] = "Exchange::IAccessorOCDM"
METHODS[1024] = {
    [3] = { name = "IsTypeSupported", retvals = {  { type = Type.BOOL } }, params = {  { name = "keySystem", type = Type.STRING },  { name = "mimeType", type = Type.STRING } } }, 
    [4] = { name = "Metadata", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" },  { name = "metadata", type = Type.STRING } }, params = {  { name = "keySystem", type = Type.STRING } } }, 
    [5] = { name = "CreateSession", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" },  { name = "sessionId", type = Type.STRING },  { name = "session", type = Type.OBJECT, class = "Exchange::ISession" } }, params = {  { name = "keySystem", type = Type.STRING },  { name = "licenseType", type = Type.INT32 },  { name = "initDataType", type = Type.STRING },  { name = "initData", type = Type.BUFFER16, length_param = "initDataLength" },  { name = "CDMData", type = Type.BUFFER16, length_param = "CDMDataLength" },  { name = "callback", type = Type.OBJECT, class = "Exchange::ISession::ICallback" } } }, 
    [6] = { name = "SetServerCertificate", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" } }, params = {  { name = "keySystem", type = Type.STRING },  { name = "serverCertificate", type = Type.BUFFER16, length_param = "serverCertificateLength" } } }, 
    [7] = { name = "GetDrmSystemTime", retvals = {  { type = Type.UINT64 } }, params = {  { name = "keySystem", type = Type.STRING } } }, 
    [8] = { name = "GetVersionExt", retvals = {  { type = Type.STRING } }, params = {  { name = "keySystem", type = Type.STRING } } }, 
    [9] = { name = "GetLdlSessionLimit", retvals = {  { type = Type.UINT32 } }, params = {  { name = "keySystem", type = Type.STRING } } }, 
    [10] = { name = "IsSecureStopEnabled", retvals = {  { type = Type.BOOL } }, params = {  { name = "keySystem", type = Type.STRING } } }, 
    [11] = { name = "EnableSecureStop", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" } }, params = {  { name = "keySystem", type = Type.STRING },  { name = "enable", type = Type.BOOL } } }, 
    [12] = { name = "ResetSecureStops", retvals = {  { type = Type.UINT32 } }, params = {  { name = "keySystem", type = Type.STRING } } }, 
    [13] = { name = "GetSecureStopIds", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" },  { name = "ids", type = Type.BUFFER16, length_param = "idsLength" },  { name = "count", type = Type.UINT32 } }, params = {  { name = "keySystem", type = Type.STRING },  { name = "count", type = Type.UINT32 } } }, 
    [14] = { name = "GetSecureStop", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" },  { name = "rawData", type = Type.BUFFER16, length_param = "rawSize" } }, params = {  { name = "keySystem", type = Type.STRING },  { name = "sessionID", type = Type.BUFFER16, length_param = "sessionIDLength" } } }, 
    [15] = { name = "CommitSecureStop", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" } }, params = {  { name = "keySystem", type = Type.STRING },  { name = "sessionID", type = Type.BUFFER16, length_param = "sessionIDLength" },  { name = "serverResponse", type = Type.BUFFER16, length_param = "serverResponseLength" } } }, 
    [16] = { name = "DeleteKeyStore", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" } }, params = {  { name = "keySystem", type = Type.STRING } } }, 
    [17] = { name = "DeleteSecureStore", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" } }, params = {  { name = "keySystem", type = Type.STRING } } }, 
    [18] = { name = "GetKeyStoreHash", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" },  { name = "keyStoreHash", type = Type.BUFFER16, length_param = "keyStoreHashLength" } }, params = {  { name = "keySystem", type = Type.STRING } } }, 
    [19] = { name = "GetSecureStoreHash", retvals = {  { type = Type.ENUMU32, enum = "Exchange::OCDM_RESULT" },  { name = "secureStoreHash", type = Type.BUFFER16, length_param = "secureStoreHashLength" } }, params = {  { name = "keySystem", type = Type.STRING } } } 
}

--  IPackager.h
INTERFACES[480] = "Exchange::IPackager"
METHODS[480] = {
    [3] = { name = "Register", params = {  { name = "observer", type = Type.OBJECT, class = "Exchange::IPackager::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "observer", type = Type.OBJECT, class = "Exchange::IPackager::INotification" } } }, 
    [5] = { name = "Configure", retvals = {  { type = Type.UINT32 } }, params = {  { name = "service", type = Type.OBJECT, class = "PluginHost::IShell" } } }, 
    [6] = { name = "Install", retvals = {  { type = Type.UINT32 } }, params = {  { name = "name", type = Type.STRING },  { name = "version", type = Type.STRING },  { name = "arch", type = Type.STRING } } }, 
    [7] = { name = "SynchronizeRepository", retvals = {  { type = Type.UINT32 } } } 
}

INTERFACES[481] = "Exchange::IPackager::IInstallationInfo"
METHODS[481] = {
    [3] = { name = "State", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IPackager::state" } } }, 
    [4] = { name = "Progress", retvals = {  { type = Type.UINT8 } } }, 
    [5] = { name = "AppName", retvals = {  { type = Type.STRING } } }, 
    [6] = { name = "ErrorCode", retvals = {  { type = Type.UINT32 } } }, 
    [7] = { name = "Abort", retvals = {  { type = Type.UINT32 } } } 
}

INTERFACES[482] = "Exchange::IPackager::IPackageInfo"
METHODS[482] = {
    [3] = { name = "Name", retvals = {  { type = Type.STRING } } }, 
    [4] = { name = "Version", retvals = {  { type = Type.STRING } } }, 
    [5] = { name = "Architecture", retvals = {  { type = Type.STRING } } } 
}

INTERFACES[483] = "Exchange::IPackager::INotification"
METHODS[483] = {
    [3] = { name = "StateChange", params = {  { name = "package", type = Type.OBJECT, class = "Exchange::IPackager::IPackageInfo" },  { name = "install", type = Type.OBJECT, class = "Exchange::IPackager::IInstallationInfo" } } }, 
    [4] = { name = "RepositorySynchronize", params = {  { name = "status", type = Type.UINT32 } } } 
}

--  IPerformance.h
INTERFACES[624] = "Exchange::IPerformance"
METHODS[624] = {
    [3] = { name = "Send", retvals = {  { type = Type.UINT32 } }, params = {  { name = "buffer", type = Type.BUFFER16, length_param = "sendSize" } } }, 
    [4] = { name = "Receive", retvals = {  { type = Type.UINT32 },  { name = "buffer", type = Type.BUFFER16, length_param = "bufferSize" } } }, 
    [5] = { name = "Exchange", retvals = {  { type = Type.UINT32 },  { name = "bufferSize", type = Type.UINT16 },  { name = "buffer", type = Type.BUFFER16, length_param = "bufferSize" } }, params = {  { name = "bufferSize", type = Type.UINT16 },  { name = "buffer", type = Type.BUFFER16, length_param = "bufferSize" },  { name = "maxBufferSize", type = Type.UINT16 } } } 
}

--  IPlayerInfo.h
INTERFACES[801] = "RPC::IIteratorType<Exchange::IPlayerProperties::AudioCodec, Exchange::ID_PLAYER_PROPERTIES_AUDIO>"
METHODS[801] = {
    [3] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IPlayerProperties::AudioCodec" } } }, 
    [4] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IPlayerProperties::AudioCodec" } } }, 
    [5] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [7] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Current", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IPlayerProperties::AudioCodec" } } } 
}

INTERFACES[802] = "RPC::IIteratorType<Exchange::IPlayerProperties::VideoCodec, Exchange::ID_PLAYER_PROPERTIES_VIDEO>"
METHODS[802] = {
    [3] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IPlayerProperties::VideoCodec" } } }, 
    [4] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.ENUMU8, enum = "Exchange::IPlayerProperties::VideoCodec" } } }, 
    [5] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [7] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Current", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IPlayerProperties::VideoCodec" } } } 
}

INTERFACES[800] = "Exchange::IPlayerProperties"
METHODS[800] = {
    [3] = { name = "AudioCodecs", retvals = {  { type = Type.HRESULT },  { name = "codec", type = Type.OBJECT, class = "RPC::IIteratorType<Exchange::IPlayerProperties::AudioCodec, Exchange::ID_PLAYER_PROPERTIES_AUDIO>" } } }, 
    [4] = { name = "VideoCodecs", retvals = {  { type = Type.HRESULT },  { name = "codec", type = Type.OBJECT, class = "RPC::IIteratorType<Exchange::IPlayerProperties::VideoCodec, Exchange::ID_PLAYER_PROPERTIES_VIDEO>" } } }, 
    [5] = { name = "Resolution", retvals = {  { type = Type.HRESULT },  { name = "res", type = Type.ENUMU8, enum = "Exchange::IPlayerProperties::PlaybackResolution" } } }, 
    [6] = { name = "IsAudioEquivalenceEnabled", retvals = {  { type = Type.HRESULT },  { name = "ae", type = Type.BOOL } } } 
}

--  IPlayGiga.h
INTERFACES[96] = "Exchange::IPlayGiga"
METHODS[96] = {
    [3] = { name = "Launch", params = {  { type = Type.STRING },  { type = Type.STRING } } } 
}

--  IPower.h
INTERFACES[80] = "Exchange::IPower"
METHODS[80] = {
    [3] = { name = "Register", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IPower::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IPower::INotification" } } }, 
    [5] = { name = "GetState", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IPower::PCState" } } }, 
    [6] = { name = "SetState", retvals = {  { type = Type.UINT32 } }, params = {  { type = Type.ENUMU8, enum = "Exchange::IPower::PCState" },  { type = Type.UINT32 } } }, 
    [7] = { name = "PowerKey" } 
}

INTERFACES[81] = "Exchange::IPower::INotification"
METHODS[81] = {
    [3] = { name = "StateChange", params = {  { name = "origin", type = Type.ENUMU8, enum = "Exchange::IPower::PCState" },  { name = "destination", type = Type.ENUMU8, enum = "Exchange::IPower::PCState" },  { name = "phase", type = Type.ENUMU8, enum = "Exchange::IPower::PCPhase" } } } 
}

--  IProvisioning.h
INTERFACES[240] = "Exchange::IProvisioning"
METHODS[240] = {
    [3] = { name = "Register", params = {  { name = "provisioning", type = Type.OBJECT, class = "Exchange::IProvisioning::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "provisioning", type = Type.OBJECT, class = "Exchange::IProvisioning::INotification" } } }, 
    [5] = { name = "DeviceId", retvals = {  { type = Type.UINT32 },  { name = "deviceId", type = Type.STRING } } }, 
    [6] = { name = "DRMId", retvals = {  { type = Type.UINT32 },  { name = "data", type = Type.BUFFER16, length_param = "size" } }, params = {  { name = "label", type = Type.STRING } } } 
}

INTERFACES[241] = "Exchange::IProvisioning::INotification"
METHODS[241] = {
    [3] = { name = "Provisioned", params = {  { name = "labels", type = Type.OBJECT, class = "RPC::IStringIterator" } } } 
}

--  IRemoteControl.h
INTERFACES[672] = "Exchange::IRemoteControl"
METHODS[672] = {
    [3] = { name = "RegisterEvents", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IRemoteControl::INotification" } } }, 
    [4] = { name = "UnregisterEvents", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IRemoteControl::INotification" } } } 
}

INTERFACES[673] = "Exchange::IRemoteControl::INotification"
METHODS[673] = {
    [3] = { name = "Event", params = {  { name = "producer", type = Type.STRING },  { name = "event", type = Type.UINT32 } } } 
}

--  IResourceMonitor.h
INTERFACES[688] = "Exchange::IResourceMonitor"
METHODS[688] = {
    [3] = { name = "Configure", retvals = {  { type = Type.UINT32 } }, params = {  { name = "framework", type = Type.OBJECT, class = "PluginHost::IShell" } } }, 
    [4] = { name = "CompileMemoryCsv", retvals = {  { type = Type.STRING } } } 
}

--  IRPCLink.h
INTERFACES[400] = "Exchange::IRPCLink"
METHODS[400] = {
    [3] = { name = "Register", params = {  { name = "notification", type = Type.OBJECT, class = "Exchange::IRPCLink::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "notification", type = Type.OBJECT, class = "Exchange::IRPCLink::INotification" } } }, 
    [5] = { name = "Start", retvals = {  { type = Type.UINT32 } }, params = {  { name = "id", type = Type.UINT32 },  { name = "name", type = Type.STRING } } }, 
    [6] = { name = "Stop", retvals = {  { type = Type.UINT32 } } }, 
    [7] = { name = "ForceCallback", retvals = {  { type = Type.UINT32 } } } 
}

INTERFACES[401] = "Exchange::IRPCLink::INotification"
METHODS[401] = {
    [3] = { name = "Completed", params = {  { name = "id", type = Type.UINT32 },  { name = "name", type = Type.STRING } } } 
}

--  IRtspClient.h
INTERFACES[448] = "Exchange::IRtspClient"
METHODS[448] = {
    [3] = { name = "Configure", retvals = {  { type = Type.UINT32 } }, params = {  { name = "service", type = Type.OBJECT, class = "PluginHost::IShell" } } }, 
    [4] = { name = "Setup", retvals = {  { type = Type.UINT32 } }, params = {  { name = "assetId", type = Type.STRING },  { name = "position", type = Type.UINT32 } } }, 
    [5] = { name = "Play", retvals = {  { type = Type.UINT32 } }, params = {  { name = "scale", type = Type.INT32 },  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "Teardown", retvals = {  { type = Type.UINT32 } } }, 
    [7] = { name = "Set", params = {  { name = "name", type = Type.STRING },  { name = "value", type = Type.STRING } } }, 
    [8] = { name = "Get", retvals = {  { type = Type.STRING } }, params = {  { name = "name", type = Type.STRING } } } 
}

--  IRustBridge.h
INTERFACES[1200] = "Exchange::IRustBridge"
METHODS[1200] = {
    [3] = { name = "Configure", retvals = {  { type = Type.UINT32 } }, params = {  { name = "framework", type = Type.OBJECT, class = "PluginHost::IShell" },  { name = "callback", type = Type.OBJECT, class = "Exchange::IRustBridge::ICallback" } } }, 
    [4] = { name = "Request", params = {  { name = "id", type = Type.UINT32 },  { name = "context", type = Type.STRING },  { name = "method", type = Type.STRING },  { name = "parmeters", type = Type.STRING } } }, 
    [5] = { name = "Event", params = {  { name = "event", type = Type.STRING },  { name = "parmeters", type = Type.STRING } } } 
}

INTERFACES[1201] = "Exchange::IRustBridge::ICallback"
METHODS[1201] = {
    [3] = { name = "Invoke", retvals = {  { name = "response", type = Type.STRING },  { name = "result", type = Type.UINT32 } }, params = {  { name = "context", type = Type.STRING },  { name = "method", type = Type.STRING },  { name = "parmeters", type = Type.STRING } } }, 
    [4] = { name = "Event", params = {  { name = "event", type = Type.STRING },  { name = "parmeters", type = Type.STRING } } }, 
    [5] = { name = "Response", params = {  { name = "id", type = Type.UINT32 },  { name = "response", type = Type.STRING },  { name = "error", type = Type.UINT32 } } } 
}

--  ISecureShellServer.h
--  IStoreCache.h
INTERFACES[1154] = "Exchange::IStoreCache"
METHODS[1154] = {
    [3] = { name = "FlushCache", retvals = {  { type = Type.UINT32 } } } 
}

--  IStore.h
INTERFACES[1152] = "Exchange::IStore"
METHODS[1152] = {
    [3] = { name = "Register", retvals = {  { type = Type.UINT32 } }, params = {  { name = "notification", type = Type.OBJECT, class = "Exchange::IStore::INotification" } } }, 
    [4] = { name = "Unregister", retvals = {  { type = Type.UINT32 } }, params = {  { name = "notification", type = Type.OBJECT, class = "Exchange::IStore::INotification" } } }, 
    [5] = { name = "SetValue", retvals = {  { type = Type.UINT32 } }, params = {  { name = "ns", type = Type.STRING },  { name = "key", type = Type.STRING },  { name = "value", type = Type.STRING } } }, 
    [6] = { name = "GetValue", retvals = {  { type = Type.UINT32 },  { name = "value", type = Type.STRING } }, params = {  { name = "ns", type = Type.STRING },  { name = "key", type = Type.STRING } } }, 
    [7] = { name = "DeleteKey", retvals = {  { type = Type.UINT32 } }, params = {  { name = "ns", type = Type.STRING },  { name = "key", type = Type.STRING } } }, 
    [8] = { name = "DeleteNamespace", retvals = {  { type = Type.UINT32 } }, params = {  { name = "ns", type = Type.STRING } } } 
}

INTERFACES[1153] = "Exchange::IStore::INotification"
METHODS[1153] = {
    [3] = { name = "ValueChanged", params = {  { name = "ns", type = Type.STRING },  { name = "key", type = Type.STRING },  { name = "value", type = Type.STRING } } }, 
    [4] = { name = "StorageExceeded" } 
}

--  IStream.h
INTERFACES[592] = "Exchange::IStream"
METHODS[592] = {
    [3] = { name = "Metadata", retvals = {  { type = Type.STRING } } }, 
    [4] = { name = "Type", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IStream::streamtype" } } }, 
    [5] = { name = "DRM", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IStream::drmtype" } } }, 
    [6] = { name = "Control", retvals = {  { type = Type.OBJECT, class = "Exchange::IStream::IControl" } } }, 
    [7] = { name = "Attach", params = {  { name = "callback", type = Type.OBJECT, class = "Exchange::IStream::ICallback" } } }, 
    [8] = { name = "Detach", retvals = {  { type = Type.UINT32 } }, params = {  { name = "callback", type = Type.OBJECT, class = "Exchange::IStream::ICallback" } } }, 
    [9] = { name = "State", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IStream::state" } } }, 
    [10] = { name = "Load", retvals = {  { type = Type.UINT32 } }, params = {  { name = "configuration", type = Type.STRING } } }, 
    [11] = { name = "Error", retvals = {  { type = Type.UINT32 } } }, 
    [12] = { name = "Elements", retvals = {  { type = Type.OBJECT, class = "Exchange::IStream::IElement::IIterator" } } } 
}

INTERFACES[597] = "Exchange::IStream::IElement"
METHODS[597] = {
    [3] = { name = "Type", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IStream::IElement::type" } } } 
}

INTERFACES[598] = "Exchange::IStream::IElement::IIterator"
METHODS[598] = {
    [3] = { name = "Reset" }, 
    [4] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [5] = { name = "Next", retvals = {  { type = Type.BOOL } } }, 
    [6] = { name = "Current", retvals = {  { type = Type.OBJECT, class = "Exchange::IStream::IElement" } } } 
}

INTERFACES[593] = "Exchange::IStream::IControl"
METHODS[593] = {
    [3] = { name = "Speeds", retvals = {  { type = Type.OBJECT, class = "RPC::IValueIterator" } } }, 
    [4] = { name = "Speed", params = {  { name = "request", type = Type.INT32 } } }, 
    [5] = { name = "Speed", retvals = {  { type = Type.INT32 } } }, 
    [6] = { name = "Position", params = {  { name = "absoluteTime", type = Type.UINT64 } } }, 
    [7] = { name = "Position", retvals = {  { type = Type.UINT64 } } }, 
    [8] = { name = "TimeRange", retvals = {  { name = "begin", type = Type.UINT64 },  { name = "end", type = Type.UINT64 } } }, 
    [9] = { name = "Geometry", retvals = {  { type = Type.OBJECT, class = "Exchange::IStream::IControl::IGeometry" } } }, 
    [10] = { name = "Geometry", params = {  { name = "settings", type = Type.OBJECT, class = "Exchange::IStream::IControl::IGeometry" } } }, 
    [11] = { name = "Callback", params = {  { name = "callback", type = Type.OBJECT, class = "Exchange::IStream::IControl::ICallback" } } } 
}

INTERFACES[594] = "Exchange::IStream::IControl::IGeometry"
METHODS[594] = {
    [3] = { name = "X", retvals = {  { type = Type.UINT32 } } }, 
    [4] = { name = "Y", retvals = {  { type = Type.UINT32 } } }, 
    [5] = { name = "Z", retvals = {  { type = Type.UINT32 } } }, 
    [6] = { name = "Width", retvals = {  { type = Type.UINT32 } } }, 
    [7] = { name = "Height", retvals = {  { type = Type.UINT32 } } } 
}

INTERFACES[595] = "Exchange::IStream::IControl::ICallback"
METHODS[595] = {
    [3] = { name = "Event", params = {  { name = "eventid", type = Type.UINT32 } } }, 
    [4] = { name = "TimeUpdate", params = {  { name = "position", type = Type.UINT64 } } } 
}

INTERFACES[596] = "Exchange::IStream::ICallback"
METHODS[596] = {
    [3] = { name = "DRM", params = {  { name = "state", type = Type.UINT32 } } }, 
    [4] = { name = "StateChange", params = {  { name = "newState", type = Type.ENUMU8, enum = "Exchange::IStream::state" } } }, 
    [5] = { name = "Event", params = {  { name = "eventid", type = Type.UINT32 } } } 
}

INTERFACES[599] = "Exchange::IPlayer"
METHODS[599] = {
    [3] = { name = "CreateStream", retvals = {  { type = Type.OBJECT, class = "Exchange::IStream" } }, params = {  { name = "streamType", type = Type.ENUMU8, enum = "Exchange::IStream::streamtype" } } }, 
    [4] = { name = "Configure", retvals = {  { type = Type.UINT32 } }, params = {  { name = "service", type = Type.OBJECT, class = "PluginHost::IShell" } } } 
}

--  ISwitchBoard.h
--  ISystemCommands.h
--  ITestController.h
INTERFACES[528] = "Exchange::ITestController"
METHODS[528] = {
    [3] = { name = "Setup" }, 
    [4] = { name = "TearDown" }, 
    [5] = { name = "Categories", retvals = {  { type = Type.OBJECT, class = "Exchange::ITestController::ICategory::IIterator" } } }, 
    [6] = { name = "Category", retvals = {  { type = Type.OBJECT, class = "Exchange::ITestController::ICategory" } }, params = {  { name = "category", type = Type.STRING } } } 
}

INTERFACES[529] = "Exchange::ITestController::ITest"
METHODS[529] = {
    [3] = { name = "Execute", retvals = {  { type = Type.STRING } }, params = {  { name = "params", type = Type.STRING } } }, 
    [4] = { name = "Description", retvals = {  { type = Type.STRING } } }, 
    [5] = { name = "Name", retvals = {  { type = Type.STRING } } } 
}

INTERFACES[530] = "Exchange::ITestController::ITest::IIterator"
METHODS[530] = {
    [3] = { name = "Reset" }, 
    [4] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [5] = { name = "Next", retvals = {  { type = Type.BOOL } } }, 
    [6] = { name = "Test", retvals = {  { type = Type.OBJECT, class = "Exchange::ITestController::ITest" } } } 
}

INTERFACES[531] = "Exchange::ITestController::ICategory"
METHODS[531] = {
    [3] = { name = "Name", retvals = {  { type = Type.STRING } } }, 
    [4] = { name = "Setup" }, 
    [5] = { name = "TearDown" }, 
    [6] = { name = "Register", params = {  { name = "test", type = Type.OBJECT, class = "Exchange::ITestController::ITest" } } }, 
    [7] = { name = "Unregister", params = {  { name = "test", type = Type.OBJECT, class = "Exchange::ITestController::ITest" } } }, 
    [8] = { name = "Tests", retvals = {  { type = Type.OBJECT, class = "Exchange::ITestController::ITest::IIterator" } } }, 
    [9] = { name = "Test", retvals = {  { type = Type.OBJECT, class = "Exchange::ITestController::ITest" } }, params = {  { name = "name", type = Type.STRING } } } 
}

INTERFACES[532] = "Exchange::ITestController::ICategory::IIterator"
METHODS[532] = {
    [3] = { name = "Reset" }, 
    [4] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [5] = { name = "Next", retvals = {  { type = Type.BOOL } } }, 
    [6] = { name = "Category", retvals = {  { type = Type.OBJECT, class = "Exchange::ITestController::ICategory" } } } 
}

--  ITestUtility.h
INTERFACES[544] = "Exchange::ITestUtility"
METHODS[544] = {
    [3] = { name = "Commands", retvals = {  { type = Type.OBJECT, class = "Exchange::ITestUtility::ICommand::IIterator" } } }, 
    [4] = { name = "Command", retvals = {  { type = Type.OBJECT, class = "Exchange::ITestUtility::ICommand" } }, params = {  { name = "name", type = Type.STRING } } }, 
    [5] = { name = "ShutdownTimeout", retvals = {  { type = Type.UINT32 } }, params = {  { name = "timeout", type = Type.UINT32 } } } 
}

INTERFACES[545] = "Exchange::ITestUtility::ICommand"
METHODS[545] = {
    [3] = { name = "Execute", retvals = {  { type = Type.STRING } }, params = {  { name = "params", type = Type.STRING } } }, 
    [4] = { name = "Description", retvals = {  { type = Type.STRING } } }, 
    [5] = { name = "Signature", retvals = {  { type = Type.STRING } } }, 
    [6] = { name = "Name", retvals = {  { type = Type.STRING } } } 
}

INTERFACES[546] = "Exchange::ITestUtility::ICommand::IIterator"
METHODS[546] = {
    [3] = { name = "Reset" }, 
    [4] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [5] = { name = "Next", retvals = {  { type = Type.BOOL } } }, 
    [6] = { name = "Command", retvals = {  { type = Type.OBJECT, class = "Exchange::ITestUtility::ICommand" } } } 
}

--  ITimeSync.h
--  ITimeZone.h
INTERFACES[1120] = "Exchange::ITimeZone"
METHODS[1120] = {
    [3] = { name = "Register", retvals = {  { type = Type.HRESULT } }, params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::ITimeZone::INotification" } } }, 
    [4] = { name = "Unregister", retvals = {  { type = Type.HRESULT } }, params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::ITimeZone::INotification" } } }, 
    [5] = { name = "TimeZone", retvals = {  { type = Type.HRESULT },  { name = "timeZone", type = Type.STRING } } }, 
    [6] = { name = "TimeZone", retvals = {  { type = Type.HRESULT } }, params = {  { name = "timeZone", type = Type.STRING } } } 
}

INTERFACES[1121] = "Exchange::ITimeZone::INotification"
METHODS[1121] = {
    [3] = { name = "TimeZoneChanged", params = {  { name = "timeZone", type = Type.STRING } } } 
}

--  IValuePoint.h
INTERFACES[1088] = "Exchange::IValuePoint"
METHODS[1088] = {
    [3] = { name = "Register", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IValuePoint::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IValuePoint::INotification" } } }, 
    [5] = { name = "Identifier", retvals = {  { type = Type.UINT32 },  { name = "ID", type = Type.UINT32 } } }, 
    [6] = { name = "Bundle", retvals = {  { type = Type.UINT32 },  { name = "ID", type = Type.UINT32 } } }, 
    [7] = { name = "Condition", retvals = {  { type = Type.UINT32 },  { name = "value", type = Type.ENUMU8, enum = "Exchange::IValuePoint::condition" } } }, 
    [8] = { name = "Type", retvals = {  { type = Type.UINT32 },  { name = "value", type = Type.UINT32 } } }, 
    [9] = { name = "Minimum", retvals = {  { type = Type.UINT32 },  { name = "value", type = Type.INT32 } } }, 
    [10] = { name = "Maximum", retvals = {  { type = Type.UINT32 },  { name = "value", type = Type.INT32 } } }, 
    [11] = { name = "Value", retvals = {  { type = Type.UINT32 },  { name = "value", type = Type.INT32 } } }, 
    [12] = { name = "Value", retvals = {  { type = Type.UINT32 } }, params = {  { name = "value", type = Type.INT32 } } }, 
    [13] = { name = "Metadata", retvals = {  { type = Type.UINT32 },  { name = "value", type = Type.STRING } } }, 
    [14] = { name = "Evaluate" } 
}

INTERFACES[1090] = "Exchange::IValuePoint::ICatalog"
METHODS[1090] = {
    [3] = { name = "Register", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IValuePoint::ICatalog::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IValuePoint::ICatalog::INotification" } } }, 
    [5] = { name = "Resource", retvals = {  { type = Type.OBJECT, class = "Exchange::IValuePoint" } }, params = {  { name = "id", type = Type.UINT32 } } } 
}

INTERFACES[1091] = "Exchange::IValuePoint::ICatalog::INotification"
METHODS[1091] = {
    [3] = { name = "Activated", params = {  { name = "source", type = Type.OBJECT, class = "Exchange::IValuePoint" } } }, 
    [4] = { name = "Deactivated", params = {  { name = "source", type = Type.OBJECT, class = "Exchange::IValuePoint" } } } 
}

INTERFACES[1089] = "Exchange::IValuePoint::INotification"
METHODS[1089] = {
    [3] = { name = "Update", params = {  { name = "id", type = Type.UINT32 } } }, 
    [4] = { name = "Metadata", params = {  { name = "id", type = Type.UINT32 } } } 
}

--  IVoiceHandler.h
INTERFACES[321] = "Exchange::IVoiceProducer"
METHODS[321] = {
    [3] = { name = "Name", retvals = {  { type = Type.STRING } } }, 
    [4] = { name = "Callback", retvals = {  { type = Type.UINT32 } }, params = {  { name = "callback", type = Type.OBJECT, class = "Exchange::IVoiceHandler" } } }, 
    [5] = { name = "Error", retvals = {  { type = Type.UINT32 } } }, 
    [6] = { name = "MetaData", retvals = {  { type = Type.STRING } } }, 
    [7] = { name = "Configure", params = {  { name = "settings", type = Type.STRING } } } 
}

INTERFACES[736] = "Exchange::IVoiceProducer::IProfile"
METHODS[736] = {
    [3] = { name = "Codec", retvals = {  { type = Type.ENUMU8, enum = "Exchange::IVoiceProducer::IProfile::codec" } } }, 
    [4] = { name = "Channels", retvals = {  { type = Type.UINT8 } } }, 
    [5] = { name = "SampleRate", retvals = {  { type = Type.UINT32 } } }, 
    [6] = { name = "Resolution", retvals = {  { type = Type.UINT8 } } } 
}

INTERFACES[320] = "Exchange::IVoiceHandler"
METHODS[320] = {
    [3] = { name = "Start", params = {  { name = "profile", type = Type.OBJECT, class = "Exchange::IVoiceProducer::IProfile" } } }, 
    [4] = { name = "Stop" }, 
    [5] = { name = "Data", params = {  { name = "sequenceNo", type = Type.UINT32 },  { name = "data", type = Type.BUFFER16, length_param = "length" } } } 
}

--  IVolumeControl.h
INTERFACES[752] = "Exchange::IVolumeControl"
METHODS[752] = {
    [3] = { name = "Register", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IVolumeControl::INotification" } } }, 
    [4] = { name = "Unregister", params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IVolumeControl::INotification" } } }, 
    [5] = { name = "Muted", retvals = {  { type = Type.HRESULT } }, params = {  { name = "muted", type = Type.BOOL } } }, 
    [6] = { name = "Muted", retvals = {  { type = Type.HRESULT },  { name = "muted", type = Type.BOOL } } }, 
    [7] = { name = "Volume", retvals = {  { type = Type.HRESULT } }, params = {  { name = "volume", type = Type.UINT8 } } }, 
    [8] = { name = "Volume", retvals = {  { type = Type.HRESULT },  { name = "volume", type = Type.UINT8 } } } 
}

INTERFACES[753] = "Exchange::IVolumeControl::INotification"
METHODS[753] = {
    [3] = { name = "Volume", params = {  { name = "volume", type = Type.UINT8 } } }, 
    [4] = { name = "Muted", params = {  { name = "muted", type = Type.BOOL } } } 
}

--  IWebDriver.h
INTERFACES[336] = "Exchange::IWebDriver"
METHODS[336] = {
    [3] = { name = "Configure", retvals = {  { type = Type.UINT32 } }, params = {  { name = "framework", type = Type.OBJECT, class = "PluginHost::IShell" } } } 
}

--  IWebPA.h
INTERFACES[640] = "Exchange::IWebPA"
METHODS[640] = {
    [3] = { name = "Initialize", retvals = {  { type = Type.UINT32 } }, params = {  { type = Type.OBJECT, class = "PluginHost::IShell" } } }, 
    [4] = { name = "Deinitialize", params = {  { type = Type.OBJECT, class = "PluginHost::IShell" } } }, 
    [5] = { name = "Client", retvals = {  { type = Type.OBJECT, class = "Exchange::IWebPA::IWebPAClient" } }, params = {  { name = "name", type = Type.STRING } } } 
}

INTERFACES[641] = "Exchange::IWebPA::IWebPAClient"
METHODS[641] = {
    [3] = { name = "Configure", retvals = {  { type = Type.UINT32 } }, params = {  { type = Type.OBJECT, class = "PluginHost::IShell" } } }, 
    [4] = { name = "Launch", retvals = {  { type = Type.UINT32 } } } 
}

--  IWebServer.h
INTERFACES[352] = "Exchange::IWebServer"
METHODS[352] = {
    [3] = { name = "AddProxy", params = {  { name = "path", type = Type.STRING },  { name = "subst", type = Type.STRING },  { name = "address", type = Type.STRING } } }, 
    [4] = { name = "RemoveProxy", params = {  { name = "path", type = Type.STRING } } }, 
    [5] = { name = "Accessor", retvals = {  { type = Type.STRING } } } 
}

--  IWifiControl.h
INTERFACES[1219] = "RPC::IIteratorType<Exchange::IWifiControl::SecurityInfo, Exchange::ID_WIFICONTROL_SECURITY_INFO_ITERATOR>"
METHODS[1219] = {
    [3] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.POD, class = "Exchange::IWifiControl::SecurityInfo", pod = { { name = method, type = Type.ENUMU8, enum = "Exchange::IWifiControl::Security" }, { name = keys, type = Type.ENUMU8, enum = "Exchange::IWifiControl::SecurityInfo::Key", bitmask = true } } } } }, 
    [4] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.POD, class = "Exchange::IWifiControl::SecurityInfo", pod = { { name = method, type = Type.ENUMU8, enum = "Exchange::IWifiControl::Security" }, { name = keys, type = Type.ENUMU8, enum = "Exchange::IWifiControl::SecurityInfo::Key", bitmask = true } } } } }, 
    [5] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [7] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Current", retvals = {  { type = Type.POD, class = "Exchange::IWifiControl::SecurityInfo", pod = { { name = method, type = Type.ENUMU8, enum = "Exchange::IWifiControl::Security" }, { name = keys, type = Type.ENUMU8, enum = "Exchange::IWifiControl::SecurityInfo::Key", bitmask = true } } } } } 
}

INTERFACES[1218] = "RPC::IIteratorType<Exchange::IWifiControl::NetworkInfo, Exchange::ID_WIFICONTROL_NETWORK_INFO_ITERATOR>"
METHODS[1218] = {
    [3] = { name = "Next", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.POD, class = "Exchange::IWifiControl::NetworkInfo", pod = { { name = ssid, type = Type.STRING }, { name = bssid, type = Type.UINT64 }, { name = frequency, type = Type.UINT32 }, { name = signal, type = Type.UINT32 }, { name = security, type = Type.ENUMU8, enum = "Exchange::IWifiControl::Security", bitmask = true } } } } }, 
    [4] = { name = "Previous", retvals = {  { type = Type.BOOL },  { name = "info", type = Type.POD, class = "Exchange::IWifiControl::NetworkInfo", pod = { { name = ssid, type = Type.STRING }, { name = bssid, type = Type.UINT64 }, { name = frequency, type = Type.UINT32 }, { name = signal, type = Type.UINT32 }, { name = security, type = Type.ENUMU8, enum = "Exchange::IWifiControl::Security", bitmask = true } } } } }, 
    [5] = { name = "Reset", params = {  { name = "position", type = Type.UINT32 } } }, 
    [6] = { name = "IsValid", retvals = {  { type = Type.BOOL } } }, 
    [7] = { name = "Count", retvals = {  { type = Type.UINT32 } } }, 
    [8] = { name = "Current", retvals = {  { type = Type.POD, class = "Exchange::IWifiControl::NetworkInfo", pod = { { name = ssid, type = Type.STRING }, { name = bssid, type = Type.UINT64 }, { name = frequency, type = Type.UINT32 }, { name = signal, type = Type.UINT32 }, { name = security, type = Type.ENUMU8, enum = "Exchange::IWifiControl::Security", bitmask = true } } } } } 
}

INTERFACES[1216] = "Exchange::IWifiControl"
METHODS[1216] = {
    [3] = { name = "Register", retvals = {  { type = Type.HRESULT } }, params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IWifiControl::INotification" } } }, 
    [4] = { name = "Unregister", retvals = {  { type = Type.HRESULT } }, params = {  { name = "sink", type = Type.OBJECT, class = "Exchange::IWifiControl::INotification" } } }, 
    [5] = { name = "Networks", retvals = {  { type = Type.HRESULT },  { name = "networkInfoList", type = Type.OBJECT, class = "RPC::IIteratorType<Exchange::IWifiControl::NetworkInfo, Exchange::ID_WIFICONTROL_NETWORK_INFO_ITERATOR>" } } }, 
    [6] = { name = "Securities", retvals = {  { type = Type.HRESULT },  { name = "securityMethods", type = Type.OBJECT, class = "RPC::IIteratorType<Exchange::IWifiControl::SecurityInfo, Exchange::ID_WIFICONTROL_SECURITY_INFO_ITERATOR>" } }, params = {  { name = "ssid", type = Type.STRING } } }, 
    [7] = { name = "Configs", retvals = {  { type = Type.HRESULT },  { name = "configs", type = Type.OBJECT, class = "RPC::IIteratorType<string, RPC::ID_STRINGITERATOR>" } } }, 
    [8] = { name = "Config", retvals = {  { type = Type.HRESULT },  { name = "configInfo", type = Type.POD, class = "Exchange::IWifiControl::ConfigInfo", pod = { { name = hidden, type = Type.BOOL }, { name = accesspoint, type = Type.BOOL }, { name = ssid, type = Type.STRING }, { name = secret, type = Type.STRING }, { name = identity, type = Type.STRING }, { name = method, type = Type.ENUMU8, enum = "Exchange::IWifiControl::Security" }, { name = key, type = Type.ENUMU8, enum = "Exchange::IWifiControl::SecurityInfo::Key" } } } }, params = {  { name = "ssid", type = Type.STRING } } }, 
    [9] = { name = "Config", retvals = {  { type = Type.HRESULT } }, params = {  { name = "ssid", type = Type.STRING },  { name = "configInfo", type = Type.POD, class = "Exchange::IWifiControl::ConfigInfo", pod = { { name = hidden, type = Type.BOOL }, { name = accesspoint, type = Type.BOOL }, { name = ssid, type = Type.STRING }, { name = secret, type = Type.STRING }, { name = identity, type = Type.STRING }, { name = method, type = Type.ENUMU8, enum = "Exchange::IWifiControl::Security" }, { name = key, type = Type.ENUMU8, enum = "Exchange::IWifiControl::SecurityInfo::Key" } } } } }, 
    [10] = { name = "Scan", retvals = {  { type = Type.HRESULT } } }, 
    [11] = { name = "AbortScan", retvals = {  { type = Type.HRESULT } } }, 
    [12] = { name = "Connect", retvals = {  { type = Type.HRESULT } }, params = {  { name = "configSSID", type = Type.STRING } } }, 
    [13] = { name = "Disconnect", retvals = {  { type = Type.HRESULT } }, params = {  { name = "configSSID", type = Type.STRING } } }, 
    [14] = { name = "Status", retvals = {  { type = Type.HRESULT },  { name = "connectedSsid", type = Type.STRING },  { name = "isScanning", type = Type.BOOL } } } 
}

INTERFACES[1217] = "Exchange::IWifiControl::INotification"
METHODS[1217] = {
    [3] = { name = "NetworkChange" }, 
    [4] = { name = "ConnectionChange", params = {  { name = "ssid", type = Type.STRING } } } 
}

--  IZigWave.h
INTERFACES[1104] = "Exchange::IZigWave"
METHODS[1104] = {
    [3] = { name = "Accept", retvals = {  { type = Type.UINT32 },  { name = "enabled", type = Type.BOOL } }, params = {  { name = "address", type = Type.UINT32 } } }, 
    [4] = { name = "Accept", retvals = {  { type = Type.UINT32 } }, params = {  { name = "address", type = Type.UINT32 },  { name = "enabled", type = Type.BOOL } } }, 
    [5] = { name = "Device", retvals = {  { type = Type.UINT32 },  { name = "metadata", type = Type.STRING } }, params = {  { name = "id", type = Type.UINT32 } } }, 
    [6] = { name = "Devices", retvals = {  { type = Type.UINT32 },  { name = "devices", type = Type.OBJECT, class = "RPC::IValueIterator" } } }, 
    [7] = { name = "Bind", retvals = {  { type = Type.UINT32 } }, params = {  { name = "source", type = Type.UINT32 },  { name = "destination", type = Type.UINT32 } } }, 
    [8] = { name = "Unbind", retvals = {  { type = Type.UINT32 } }, params = {  { name = "source", type = Type.UINT32 },  { name = "destination", type = Type.UINT32 } } } 
}

--  ICryptography.h
INTERFACES[4352] = "Cryptography::IHash"
METHODS[4352] = {
    [3] = { name = "Ingest", retvals = {  { type = Type.UINT32 } }, params = {  { name = "data", type = Type.BUFFER16, length_param = "length" } } }, 
    [4] = { name = "Calculate", retvals = {  { type = Type.UINT8 },  { name = "data", type = Type.BUFFER8, length_param = "maxLength" } }, params = {  { name = "maxLength", type = Type.UINT8 } } } 
}

INTERFACES[4354] = "Cryptography::ICipher"
METHODS[4354] = {
    [3] = { name = "Encrypt", retvals = {  { type = Type.INT32 },  { name = "output", type = Type.BUFFER16, length_param = "maxOutputLength" } }, params = {  { name = "iv", type = Type.BUFFER8, length_param = "ivLength" },  { name = "input", type = Type.BUFFER16, length_param = "inputLength" },  { name = "maxOutputLength", type = Type.UINT16 } } }, 
    [4] = { name = "Decrypt", retvals = {  { type = Type.INT32 },  { name = "output", type = Type.BUFFER16, length_param = "maxOutputLength" } }, params = {  { name = "iv", type = Type.BUFFER8, length_param = "ivLength" },  { name = "input", type = Type.BUFFER16, length_param = "inputLength" },  { name = "maxOutputLength", type = Type.UINT16 } } } 
}

INTERFACES[4355] = "Cryptography::IDiffieHellman"
METHODS[4355] = {
    [3] = { name = "Generate", retvals = {  { type = Type.UINT32 },  { name = "privKeyId", type = Type.UINT32 },  { name = "pubKeyId", type = Type.UINT32 } }, params = {  { name = "generator", type = Type.UINT8 },  { name = "modulus", type = Type.BUFFER16, length_param = "modulusSize" } } }, 
    [4] = { name = "Derive", retvals = {  { type = Type.UINT32 },  { name = "secretId", type = Type.UINT32 } }, params = {  { name = "privateKey", type = Type.UINT32 },  { name = "peerPublicKeyId", type = Type.UINT32 } } } 
}

INTERFACES[4357] = "Cryptography::IPersistent"
METHODS[4357] = {
    [3] = { name = "Exists", retvals = {  { type = Type.UINT32 },  { name = "result", type = Type.BOOL } }, params = {  { name = "locator", type = Type.STRING } } }, 
    [4] = { name = "Load", retvals = {  { type = Type.UINT32 },  { name = "id", type = Type.UINT32 } }, params = {  { name = "locator", type = Type.STRING } } }, 
    [5] = { name = "Create", retvals = {  { type = Type.UINT32 },  { name = "id", type = Type.UINT32 } }, params = {  { name = "locator", type = Type.STRING },  { name = "keyType", type = Type.ENUM32, enum = "Cryptography::IPersistent::keytype" } } }, 
    [6] = { name = "Flush", retvals = {  { type = Type.UINT32 } } } 
}

INTERFACES[4353] = "Cryptography::IVault"
METHODS[4353] = {
    [3] = { name = "Size", retvals = {  { type = Type.UINT16 } }, params = {  { name = "id", type = Type.UINT32 } } }, 
    [4] = { name = "Import", retvals = {  { type = Type.UINT32 } }, params = {  { name = "blob", type = Type.BUFFER16, length_param = "length" } } }, 
    [5] = { name = "Export", retvals = {  { type = Type.UINT16 },  { name = "blob", type = Type.BUFFER16, length_param = "maxLength" } }, params = {  { name = "id", type = Type.UINT32 },  { name = "maxLength", type = Type.UINT16 } } }, 
    [6] = { name = "Set", retvals = {  { type = Type.UINT32 } }, params = {  { name = "blob", type = Type.BUFFER16, length_param = "length" } } }, 
    [7] = { name = "Get", retvals = {  { type = Type.UINT16 },  { name = "blob", type = Type.BUFFER16, length_param = "maxLength" } }, params = {  { name = "id", type = Type.UINT32 },  { name = "maxLength", type = Type.UINT16 } } }, 
    [8] = { name = "Delete", retvals = {  { type = Type.BOOL } }, params = {  { name = "id", type = Type.UINT32 } } }, 
    [9] = { name = "HMAC", retvals = {  { type = Type.OBJECT, class = "Cryptography::IHash" } }, params = {  { name = "hashType", type = Type.ENUMU8, enum = "Cryptography::hashtype" },  { name = "keyId", type = Type.UINT32 } } }, 
    [10] = { name = "AES", retvals = {  { type = Type.OBJECT, class = "Cryptography::ICipher" } }, params = {  { name = "aesMode", type = Type.ENUMU8, enum = "Cryptography::aesmode" },  { name = "keyId", type = Type.UINT32 } } }, 
    [11] = { name = "DiffieHellman", retvals = {  { type = Type.OBJECT, class = "Cryptography::IDiffieHellman" } } } 
}

INTERFACES[4356] = "Cryptography::ICryptography"
METHODS[4356] = {
    [3] = { name = "Hash", retvals = {  { type = Type.OBJECT, class = "Cryptography::IHash" } }, params = {  { name = "hashType", type = Type.ENUMU8, enum = "Cryptography::hashtype" } } }, 
    [4] = { name = "Vault", retvals = {  { type = Type.OBJECT, class = "Cryptography::IVault" } }, params = {  { name = "id", type = Type.ENUMU8, enum = "::cryptographyvault" } } } 
}

--  INetflixSecurity.h
INTERFACES[4608] = "Cryptography::INetflixSecurity"
METHODS[4608] = {
    [3] = { name = "ESN", retvals = {  { type = Type.STRING } } }, 
    [4] = { name = "EncryptionKey", retvals = {  { type = Type.UINT32 } } }, 
    [5] = { name = "HMACKey", retvals = {  { type = Type.UINT32 } } }, 
    [6] = { name = "WrappingKey", retvals = {  { type = Type.UINT32 } } }, 
    [7] = { name = "DeriveKeys", retvals = {  { type = Type.UINT32 },  { name = "encryptionKeyId", type = Type.UINT32 },  { name = "hmacKeyId", type = Type.UINT32 },  { name = "wrappingKeyId", type = Type.UINT32 } }, params = {  { name = "privateDhKeyId", type = Type.UINT32 },  { name = "peerPublicDhKeyId", type = Type.UINT32 },  { name = "derivationKeyId", type = Type.UINT32 } } } 
}

-- enums
ENUMS["PluginHost::IShell::startup"] = {
    [0] = "UNAVAILABLE",
    [1] = "DEACTIVATED",
    [2] = "ACTIVATED"
}

ENUMS["PluginHost::IShell::state"] = {
    [0] = "UNAVAILABLE",
    [1] = "DEACTIVATED",
    [2] = "DEACTIVATION",
    [3] = "ACTIVATED",
    [4] = "ACTIVATION",
    [5] = "PRECONDITION",
    [6] = "HIBERNATED",
    [7] = "DESTROYED"
}

ENUMS["PluginHost::IShell::reason"] = {
    [0] = "REQUESTED",
    [1] = "AUTOMATIC",
    [2] = "FAILURE",
    [3] = "MEMORY_EXCEEDED",
    [4] = "STARTUP",
    [5] = "SHUTDOWN",
    [6] = "CONDITIONS",
    [7] = "WATCHDOG_EXPIRED",
    [8] = "INITIALIZATION_FAILED"
}

ENUMS["PluginHost::IStateControl::state"] = {
    [0] = "UNINITIALIZED",
    [1] = "SUSPENDED",
    [2] = "RESUMED",
    [3] = "EXITED"
}

ENUMS["PluginHost::IStateControl::command"] = {
    [1] = "SUSPEND",
    [2] = "RESUME"
}

ENUMS["PluginHost::ISubSystem::subsystem"] = {
    [0] = "PLATFORM",
    [1] = "SECURITY",
    [2] = "NETWORK",
    [3] = "IDENTIFIER",
    [4] = "GRAPHICS",
    [5] = "INTERNET",
    [6] = "LOCATION",
    [7] = "TIME",
    [8] = "PROVISIONING",
    [9] = "DECRYPTION",
    [10] = "WEBSOURCE",
    [11] = "STREAMING",
    [12] = "BLUETOOTH",
    [13] = "END_LIST",
    [2147483648] = "NOT_PLATFORM",
    [2147483649] = "NOT_SECURITY",
    [2147483650] = "NOT_NETWORK",
    [2147483651] = "NOT_IDENTIFIER",
    [2147483652] = "NOT_GRAPHICS",
    [2147483653] = "NOT_INTERNET",
    [2147483654] = "NOT_LOCATION",
    [2147483655] = "NOT_TIME",
    [2147483656] = "NOT_PROVISIONING",
    [2147483657] = "NOT_DECRYPTION",
    [2147483658] = "NOT_WEBSOURCE",
    [2147483659] = "NOT_STREAMING",
    [2147483660] = "NOT_BLUETOOTH"
}

ENUMS["PluginHost::ISubSystem::IInternet::network_type"] = {
    [0] = "UNKNOWN",
    [1] = "IPV4",
    [2] = "IPV6"
}

ENUMS["Exchange::IApplication::resettype"] = {
    [0] = "FACTORY",
    [1] = "CACHE",
    [2] = "CREDENTIALS",
    [3] = "RECORDINGS"
}

ENUMS["Exchange::IApplication::launchpointtype"] = {
    [0] = "UNDEFINED",
    [1] = "DIAL",
    [2] = "DEDICATED_BUTTON",
    [3] = "DEDICATED_ICON",
    [4] = "APPLICATION_LIST",
    [5] = "INTEGRATED_TILE",
    [6] = "SEARCH_RESULT",
    [7] = "SEARCH_CONTINUATION",
    [8] = "VOICE_CONTROL",
    [9] = "VOICE_SEARCH_RESULT",
    [10] = "VISUAL_GESTURE",
    [11] = "TOUCH_GESTURE",
    [12] = "EPG_GRID",
    [13] = "CHANNEL_NUMBER",
    [14] = "CHANNEL_ZAP",
    [15] = "CHANNEL_BAR",
    [16] = "WEB_BROWSER",
    [17] = "POWER_ON",
    [18] = "POWER_ON_FROM_DEDICATED_BUTTON",
    [19] = "SUSPENDED_POWER_ON",
    [20] = "RESTART",
    [21] = "SUSPENDED_RESTART",
    [22] = "RESUMED_FROM_SCREEN_SAVER",
    [23] = "RESUMED_FROM_STANDBY",
    [24] = "BANNER_AD",
    [25] = "TITLE_RECOMMENDATION",
    [26] = "APPLICATION_PROMOTION"
}

ENUMS["Exchange::IAVSController::INotification::dialoguestate"] = {
    [0] = "IDLE",
    [1] = "LISTENING",
    [2] = "EXPECTING",
    [3] = "THINKING",
    [4] = "SPEAKING"
}

ENUMS["Exchange::IBluetoothAudioSink::audiocodec"] = {
    [0] = "LC_SBC"
}

ENUMS["Exchange::IBluetoothAudioSink::drmscheme"] = {
    [0] = "NONE",
    [1] = "DTCP",
    [2] = "SCMS_T"
}

ENUMS["Exchange::IBluetoothAudioSink::state"] = {
    [0] = "UNASSIGNED",
    [1] = "DISCONNECTED",
    [2] = "CONNECTED_BAD_DEVICE",
    [3] = "CONNECTED_RESTRICTED",
    [4] = "CONNECTED",
    [5] = "READY",
    [6] = "STREAMING"
}

ENUMS["Exchange::IBluetoothAudioSink::devicetype"] = {
    [0] = "UNKNOWN",
    [1] = "HEADPHONE",
    [2] = "SPEAKER",
    [3] = "RECORDER",
    [4] = "AMPLIFIER"
}

ENUMS["Exchange::IWebBrowser::VisibilityType"] = {
    [0] = "HIDDEN",
    [1] = "VISIBLE"
}

ENUMS["Exchange::IWebBrowser::HTTPCookieAcceptPolicyType"] = {
    [0] = "ALWAYS",
    [1] = "NEVER",
    [2] = "ONLY_FROM_MAIN_DOCUMENT_DOMAIN",
    [3] = "EXCLUSIVELY_FROM_MAIN_DOCUMENT_DOMAIN"
}

ENUMS["Exchange::IBrowserSecurity::MixedContentPolicyType"] = {
    [0] = "ALLOWED",
    [1] = "BLOCKED"
}

ENUMS["Exchange::IDeviceAudioCapabilities::AudioOutput"] = {
    [0] = "AUDIO_OTHER",
    [1] = "AUDIO_RF_MODULATOR",
    [2] = "AUDIO_ANALOG",
    [3] = "AUDIO_SPDIF",
    [4] = "AUDIO_HDMI0",
    [5] = "AUDIO_HDMI1",
    [6] = "AUDIO_DISPLAYPORT"
}

ENUMS["Exchange::IDeviceAudioCapabilities::AudioCapability"] = {
    [0] = "AUDIOCAPABILITY_NONE",
    [1] = "ATMOS",
    [2] = "DD",
    [3] = "DDPLUS",
    [4] = "DAD",
    [5] = "DAPV2",
    [6] = "MS12"
}

ENUMS["Exchange::IDeviceAudioCapabilities::MS12Capability"] = {
    [0] = "MS12CAPABILITY_NONE",
    [1] = "DOLBYVOLUME",
    [2] = "INTELIGENTEQUALIZER",
    [3] = "DIALOGUEENHANCER"
}

ENUMS["Exchange::IDeviceAudioCapabilities::MS12Profile"] = {
    [0] = "MS12PROFILE_NONE",
    [1] = "MUSIC",
    [2] = "MOVIE",
    [3] = "VOICE"
}

ENUMS["Exchange::IDeviceVideoCapabilities::VideoOutput"] = {
    [0] = "VIDEO_OTHER",
    [1] = "VIDEO_RF_MODULATOR",
    [2] = "VIDEO_COMPOSITE",
    [3] = "VIDEO_SVIDEO",
    [4] = "VIDEO_COMPONENT",
    [5] = "VIDEO_SCART_RGB",
    [6] = "VIDEO_HDMI0",
    [7] = "VIDEO_HDMI1",
    [8] = "VIDEO_DISPLAYPORT"
}

ENUMS["Exchange::IDeviceVideoCapabilities::ScreenResolution"] = {
    [0] = "ScreenResolution_Unknown",
    [1] = "ScreenResolution_480i",
    [2] = "ScreenResolution_480p",
    [3] = "ScreenResolution_576i",
    [4] = "ScreenResolution_576p",
    [5] = "ScreenResolution_576p50Hz",
    [6] = "ScreenResolution_720p",
    [7] = "ScreenResolution_720p50Hz",
    [8] = "ScreenResolution_1080i",
    [9] = "ScreenResolution_1080i25Hz",
    [10] = "ScreenResolution_1080i50Hz",
    [11] = "ScreenResolution_1080p",
    [12] = "ScreenResolution_1080p24Hz",
    [13] = "ScreenResolution_1080p25Hz",
    [14] = "ScreenResolution_1080p30Hz",
    [15] = "ScreenResolution_1080p50Hz",
    [16] = "ScreenResolution_1080p60Hz",
    [17] = "ScreenResolution_2160p30Hz",
    [18] = "ScreenResolution_2160p50Hz",
    [19] = "ScreenResolution_2160p60Hz",
    [20] = "ScreenResolution_4320p30Hz",
    [21] = "ScreenResolution_4320p60Hz"
}

ENUMS["Exchange::IBrightness::Brightness"] = {
    [0] = "SdrToHdrGraphicsBrightness_Default",
    [1] = "SdrToHdrGraphicsBrightness_MatchVideo",
    [2] = "SdrToHdrGraphicsBrightness_Max"
}

ENUMS["Exchange::IContentDecryption::Status"] = {
    [0] = "BUSY",
    [1] = "SUCCESS",
    [2] = "FAILED"
}

ENUMS["Exchange::IDeviceVideoCapabilities::CopyProtection"] = {
    [0] = "HDCP_UNAVAILABLE",
    [1] = "HDCP_14",
    [2] = "HDCP_20",
    [3] = "HDCP_21",
    [4] = "HDCP_22"
}

ENUMS["Exchange::IHDRProperties::HDRType"] = {
    [0] = "HDR_OFF",
    [1] = "HDR_10",
    [2] = "HDR_10PLUS",
    [3] = "HDR_HLG",
    [4] = "HDR_DOLBYVISION",
    [5] = "HDR_TECHNICOLOR"
}

ENUMS["Exchange::IDisplayProperties::ColorimetryType"] = {
    [0] = "COLORIMETRY_UNKNOWN",
    [1] = "COLORIMETRY_OTHER",
    [2] = "COLORIMETRY_SMPTE170M",
    [3] = "COLORIMETRY_BT709",
    [4] = "COLORIMETRY_XVYCC601",
    [5] = "COLORIMETRY_XVYCC709",
    [6] = "COLORIMETRY_SYCC601",
    [7] = "COLORIMETRY_OPYCC601",
    [8] = "COLORIMETRY_OPRGB",
    [9] = "COLORIMETRY_BT2020YCCBCBRC",
    [10] = "COLORIMETRY_BT2020RGB_YCBCR"
}

ENUMS["Exchange::IConnectionProperties::HDCPProtectionType"] = {
    [0] = "HDCP_Unencrypted",
    [1] = "HDCP_1X",
    [2] = "HDCP_2X",
    [3] = "HDCP_AUTO"
}

ENUMS["Exchange::IConnectionProperties::INotification::Source"] = {
    [0] = "PRE_RESOLUTION_CHANGE",
    [1] = "POST_RESOLUTION_CHANGE",
    [2] = "HDMI_CHANGE",
    [3] = "HDCP_CHANGE"
}

ENUMS["Exchange::IDisplayProperties::ColourSpaceType"] = {
    [0] = "FORMAT_UNKNOWN",
    [1] = "FORMAT_OTHER",
    [2] = "FORMAT_RGB_444",
    [3] = "FORMAT_YCBCR_444",
    [4] = "FORMAT_YCBCR_422",
    [5] = "FORMAT_YCBCR_420"
}

ENUMS["Exchange::IDisplayProperties::FrameRateType"] = {
    [0] = "FRAMERATE_UNKNOWN",
    [1] = "FRAMERATE_23_976",
    [2] = "FRAMERATE_24",
    [3] = "FRAMERATE_25",
    [4] = "FRAMERATE_29_97",
    [5] = "FRAMERATE_30",
    [6] = "FRAMERATE_47_952",
    [7] = "FRAMERATE_48",
    [8] = "FRAMERATE_50",
    [9] = "FRAMERATE_59_94",
    [10] = "FRAMERATE_60",
    [11] = "FRAMERATE_119_88",
    [12] = "FRAMERATE_120",
    [13] = "FRAMERATE_144"
}

ENUMS["Exchange::IDisplayProperties::ColourDepthType"] = {
    [0] = "COLORDEPTH_UNKNOWN",
    [1] = "COLORDEPTH_8_BIT",
    [2] = "COLORDEPTH_10_BIT",
    [3] = "COLORDEPTH_12_BIT"
}

ENUMS["Exchange::IDisplayProperties::QuantizationRangeType"] = {
    [0] = "QUANTIZATIONRANGE_UNKNOWN",
    [1] = "QUANTIZATIONRANGE_LIMITED",
    [2] = "QUANTIZATIONRANGE_FULL"
}

ENUMS["Exchange::IDisplayProperties::EotfType"] = {
    [0] = "EOTF_UNKNOWN",
    [1] = "EOTF_OTHER",
    [2] = "EOTF_BT1886",
    [3] = "EOTF_BT2100",
    [4] = "EOTF_SMPTE_ST_2084"
}

ENUMS["Exchange::Dolby::IOutput::SoundModes"] = {
    [0] = "UNKNOWN",
    [1] = "MONO",
    [2] = "STEREO",
    [3] = "SURROUND",
    [4] = "PASSTHRU",
    [5] = "DOLBYDIGITAL",
    [6] = "DOLBYDIGITALPLUS",
    [7] = "SOUNDMODE_AUTO"
}

ENUMS["Exchange::Dolby::IOutput::Type"] = {
    [0] = "DIGITAL_PCM",
    [3] = "DIGITAL_PLUS",
    [4] = "DIGITAL_AC3",
    [5] = "AUTO",
    [6] = "DIGITAL_PASSTHROUGH",
    [7] = "MS12"
}

ENUMS["Exchange::IDsgccClient::state"] = {
    [0] = "Unknown",
    [1] = "Ready",
    [2] = "Changed",
    [3] = "Error"
}

ENUMS["Exchange::IExternal::condition"] = {
    [0] = "constructing",
    [1] = "activated",
    [2] = "deactivated"
}

ENUMS["Exchange::IInputSwitch::mode"] = {
    [0] = "ENABLED",
    [1] = "DISABLED",
    [2] = "SLAVE"
}

ENUMS["Exchange::ProducerEvents"] = {
    [1] = "PairingStarted",
    [2] = "PairingSuccess",
    [3] = "PairingFailed",
    [4] = "PairingTimedout",
    [5] = "UnpairingStarted",
    [6] = "UnpairingSuccess",
    [7] = "UnpairingFailed",
    [8] = "UnpairingTimedout"
}

ENUMS["Exchange::ITouchHandler::touchstate"] = {
    [0] = "TOUCH_MOTION",
    [1] = "TOUCH_RELEASED",
    [2] = "TOUCH_PRESSED"
}

ENUMS["Exchange::IMessageControl::messagetype"] = {
    [1] = "TRACING",
    [2] = "LOGGING"
}

ENUMS["Exchange::INetflix::state"] = {
    [1] = "PLAYING",
    [2] = "STOPPED",
    [4] = "SUSPENDING"
}

ENUMS["Exchange::INetworkControl::ModeType"] = {
    [0] = "STATIC",
    [1] = "DYNAMIC"
}

ENUMS["Exchange::INetworkControl::StatusType"] = {
    [0] = "UNAVAILABLE",
    [1] = "AVAILABLE"
}

ENUMS["Exchange::OCDM_RESULT"] = {
    [0] = "OCDM_SUCCESS",
    [1] = "OCDM_S_FALSE",
    [2147483650] = "OCDM_KEYSYSTEM_NOT_SUPPORTED",
    [2147483651] = "OCDM_INVALID_SESSION",
    [2147483652] = "OCDM_INVALID_DECRYPT_BUFFER",
    [2147483653] = "OCDM_OUT_OF_MEMORY",
    [2147500037] = "OCDM_FAIL",
    [2147942487] = "OCDM_INVALID_ARG",
    [2147796480] = "OCDM_SERVER_INTERNAL_ERROR",
    [2147796481] = "OCDM_SERVER_INVALID_MESSAGE",
    [2147796484] = "OCDM_SERVER_SERVICE_SPECIFIC"
}

ENUMS["Exchange::ISession::KeyStatus"] = {
    [0] = "Usable",
    [1] = "Expired",
    [2] = "Released",
    [3] = "OutputRestricted",
    [4] = "OutputRestrictedHDCP22",
    [5] = "OutputDownscaled",
    [6] = "StatusPending",
    [7] = "InternalError",
    [8] = "HWError"
}

ENUMS["Exchange::IPackager::state"] = {
    [0] = "IDLE",
    [1] = "DOWNLOADING",
    [2] = "DOWNLOADED",
    [3] = "DECRYPTING",
    [4] = "DECRYPTED",
    [5] = "VERIFYING",
    [6] = "VERIFIED",
    [7] = "INSTALLING",
    [8] = "INSTALLED",
    [9] = "DOWNLOAD_FAILED",
    [10] = "DECRYPTION_FAILED",
    [11] = "EXTRACTION_FAILED",
    [12] = "VERIFICATION_FAILED",
    [13] = "INSTALL_FAILED",
    [14] = "REMOVE_FAILED"
}

ENUMS["Exchange::IPlayerProperties::AudioCodec"] = {
    [0] = "AUDIO_UNDEFINED",
    [1] = "AUDIO_AAC",
    [2] = "AUDIO_AC3",
    [3] = "AUDIO_AC3_PLUS",
    [4] = "AUDIO_DTS",
    [5] = "AUDIO_MPEG1",
    [6] = "AUDIO_MPEG2",
    [7] = "AUDIO_MPEG3",
    [8] = "AUDIO_MPEG4",
    [9] = "AUDIO_OPUS",
    [10] = "AUDIO_VORBIS_OGG",
    [11] = "AUDIO_WAV"
}

ENUMS["Exchange::IPlayerProperties::VideoCodec"] = {
    [0] = "VIDEO_UNDEFINED",
    [1] = "VIDEO_H263",
    [2] = "VIDEO_H264",
    [3] = "VIDEO_H265",
    [4] = "VIDEO_H265_10",
    [5] = "VIDEO_MPEG",
    [6] = "VIDEO_MPEG2",
    [7] = "VIDEO_MPEG4",
    [8] = "VIDEO_VP8",
    [9] = "VIDEO_VP9",
    [10] = "VIDEO_VP10"
}

ENUMS["Exchange::IPlayerProperties::PlaybackResolution"] = {
    [0] = "RESOLUTION_UNKNOWN",
    [1] = "RESOLUTION_480I24",
    [2] = "RESOLUTION_480I25",
    [3] = "RESOLUTION_480I30",
    [4] = "RESOLUTION_480I50",
    [5] = "RESOLUTION_480I",
    [6] = "RESOLUTION_480P24",
    [7] = "RESOLUTION_480P25",
    [8] = "RESOLUTION_480P30",
    [9] = "RESOLUTION_480P50",
    [10] = "RESOLUTION_480P",
    [11] = "RESOLUTION_576I24",
    [12] = "RESOLUTION_576I25",
    [13] = "RESOLUTION_576I30",
    [14] = "RESOLUTION_576I50",
    [15] = "RESOLUTION_576I",
    [16] = "RESOLUTION_576P24",
    [17] = "RESOLUTION_576P25",
    [18] = "RESOLUTION_576P30",
    [19] = "RESOLUTION_576P50",
    [20] = "RESOLUTION_576P",
    [21] = "RESOLUTION_720P24",
    [22] = "RESOLUTION_720P25",
    [23] = "RESOLUTION_720P30",
    [24] = "RESOLUTION_720P50",
    [25] = "RESOLUTION_720P",
    [26] = "RESOLUTION_1080I24",
    [27] = "RESOLUTION_1080I25",
    [28] = "RESOLUTION_1080I30",
    [29] = "RESOLUTION_1080I50",
    [30] = "RESOLUTION_1080I",
    [31] = "RESOLUTION_1080P24",
    [32] = "RESOLUTION_1080P25",
    [33] = "RESOLUTION_1080P30",
    [34] = "RESOLUTION_1080P50",
    [35] = "RESOLUTION_1080P",
    [36] = "RESOLUTION_2160P24",
    [37] = "RESOLUTION_2160P25",
    [38] = "RESOLUTION_2160P30",
    [39] = "RESOLUTION_2160P50",
    [40] = "RESOLUTION_2160P60",
    [41] = "RESOLUTION_2160P"
}

ENUMS["Exchange::IPower::PCState"] = {
    [1] = "On",
    [2] = "ActiveStandby",
    [3] = "PassiveStandby",
    [4] = "SuspendToRAM",
    [5] = "Hibernate",
    [6] = "PowerOff"
}

ENUMS["Exchange::IPower::PCPhase"] = {
    [1] = "Before",
    [2] = "After"
}

ENUMS["Exchange::IStream::streamtype"] = {
    [0] = "Undefined",
    [1] = "Cable",
    [2] = "Handheld",
    [4] = "Satellite",
    [8] = "Terrestrial",
    [16] = "DAB",
    [31] = "RF",
    [32] = "Unicast",
    [64] = "Multicast",
    [96] = "IP"
}

ENUMS["Exchange::IStream::drmtype"] = {
    [0] = "None",
    [1] = "ClearKey",
    [2] = "PlayReady",
    [3] = "Widevine",
    [4] = "Unknown"
}

ENUMS["Exchange::IStream::state"] = {
    [0] = "Idle",
    [1] = "Loading",
    [2] = "Prepared",
    [3] = "Controlled",
    [4] = "Error"
}

ENUMS["Exchange::IStream::IElement::type"] = {
    [0] = "Unknown",
    [1] = "Audio",
    [2] = "Video",
    [3] = "Subtitles",
    [4] = "Teletext",
    [5] = "Data"
}

ENUMS["Exchange::IValuePoint::condition"] = {
    [0] = "constructing",
    [1] = "activated",
    [2] = "deactivated"
}

ENUMS["Exchange::IVoiceProducer::IProfile::codec"] = {
    [0] = "UNDEFINED",
    [1] = "PCM",
    [2] = "ADPCM"
}

ENUMS["Exchange::IWifiControl::Security"] = {
    [1] = "OPEN",
    [2] = "WEP",
    [4] = "WPA",
    [8] = "WPA2",
    [16] = "WPS",
    [32] = "ENTERPRISE",
    [64] = "WPA_WPA2",
    [0] = "UNKNOWN"
}

ENUMS["Exchange::IWifiControl::SecurityInfo::Key"] = {
    [1] = "PSK",
    [2] = "EAP",
    [4] = "CCMP",
    [8] = "TKIP",
    [16] = "PREAUTH",
    [32] = "PBC",
    [64] = "PIN",
    [128] = "PSK_HASHED",
    [0] = "NONE"
}

ENUMS["Cryptography::IPersistent::keytype"] = {
    [0] = "AES128",
    [1] = "AES256",
    [2] = "HMAC128",
    [3] = "HMAC160",
    [4] = "HMAC256"
}

ENUMS["Cryptography::hashtype"] = {
    [20] = "SHA1",
    [28] = "SHA224",
    [32] = "SHA256",
    [48] = "SHA384",
    [64] = "SHA512"
}

ENUMS["Cryptography::aesmode"] = {
    [0] = "ECB",
    [1] = "CBC",
    [2] = "OFB",
    [3] = "CFB1",
    [4] = "CFB8",
    [5] = "CFB128",
    [6] = "CTR"
}

ENUMS["::cryptographyvault"] = {
    [0] = "CRYPTOGRAPHY_VAULT_DEFAULT",
    [1] = "CRYPTOGRAPHY_VAULT_PLATFORM",
    [16] = "CRYPTOGRAPHY_VAULT_PROVISIONING",
    [17] = "CRYPTOGRAPHY_VAULT_NETFLIX"
}

